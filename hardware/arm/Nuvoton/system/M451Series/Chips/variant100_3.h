/*
  variant100_3.h
  
  Copyright (c) 2018 huaweiwx@sina.com 2018.11.1

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/
#include "Arduino.h"

#pragma GCC diagnostic ignored "-Wconversion-null"

#ifndef GPIO_DESC_USERDEF

const GPIOPinDescription GPIO_Desc[] =
{
  {NULL, NULL, {NULL, NULL, NULL}}, //0
  {PB, BIT13, {(uint32_t)&SYS->GPB_MFPH, SYS_GPB_MFPH_PB13MFP_Msk, SYS_GPB_MFPH_PB13MFP_GPIO}}, //1
  {PB, BIT14, {(uint32_t)&SYS->GPB_MFPH, SYS_GPB_MFPH_PB14MFP_Msk, SYS_GPB_MFPH_PB14MFP_GPIO}}, //2
  {PB, BIT15, {(uint32_t)&SYS->GPB_MFPH, SYS_GPB_MFPH_PB15MFP_Msk, SYS_GPB_MFPH_PB15MFP_GPIO}}, //3
  {PB, BIT5, {(uint32_t)&SYS->GPB_MFPL, SYS_GPB_MFPL_PB5MFP_Msk, SYS_GPB_MFPL_PB5MFP_GPIO }},   //4
  {PB, BIT6, {(uint32_t)&SYS->GPB_MFPL, SYS_GPB_MFPL_PB6MFP_Msk, SYS_GPB_MFPL_PB6MFP_GPIO }},   //5
  {PB, BIT7, {(uint32_t)&SYS->GPB_MFPL, SYS_GPB_MFPL_PB7MFP_Msk, SYS_GPB_MFPL_PB7MFP_GPIO }},   //6
  {NULL, NULL, {NULL, NULL, NULL}}, //7
  {PD, BIT0, {(uint32_t)&SYS->GPD_MFPL, SYS_GPD_MFPL_PD0MFP_Msk, SYS_GPD_MFPL_PD0MFP_GPIO }},   //8
  {NULL, NULL, {NULL, NULL, NULL}}, //9
  {NULL, NULL, {NULL, NULL, NULL}}, //10
  {NULL, NULL, {NULL, NULL, NULL}}, //11
  {PC, BIT8, {(uint32_t)&SYS->GPC_MFPH, SYS_GPC_MFPH_PC8MFP_Msk, SYS_GPC_MFPH_PC8MFP_GPIO }}, //12
  {PD, BIT8, {(uint32_t)&SYS->GPD_MFPH, SYS_GPD_MFPH_PD8MFP_Msk, SYS_GPD_MFPH_PD8MFP_GPIO }}, //13
  {PD, BIT9, {(uint32_t)&SYS->GPD_MFPH, SYS_GPD_MFPH_PD9MFP_Msk, SYS_GPD_MFPH_PD9MFP_GPIO }}, //14
  {PD, BIT1, {(uint32_t)&SYS->GPD_MFPL, SYS_GPD_MFPL_PD1MFP_Msk, SYS_GPD_MFPL_PD1MFP_GPIO }}, //15
  {PD, BIT2, {(uint32_t)&SYS->GPD_MFPL, SYS_GPD_MFPL_PD2MFP_Msk, SYS_GPD_MFPL_PD2MFP_GPIO }}, //16
  {PD, BIT3, {(uint32_t)&SYS->GPD_MFPL, SYS_GPD_MFPL_PD3MFP_Msk, SYS_GPD_MFPL_PD3MFP_GPIO }}, //17
  {PD, BIT4, {(uint32_t)&SYS->GPD_MFPL, SYS_GPD_MFPL_PD4MFP_Msk, SYS_GPD_MFPL_PD4MFP_GPIO }}, //18
  {PD, BIT5, {(uint32_t)&SYS->GPD_MFPL, SYS_GPD_MFPL_PD5MFP_Msk, SYS_GPD_MFPL_PD5MFP_GPIO }}, //19
  {PE, BIT3, {(uint32_t)&SYS->GPE_MFPL, SYS_GPE_MFPL_PE3MFP_Msk, SYS_GPE_MFPL_PE3MFP_GPIO }}, //20
  {PD, BIT6, {(uint32_t)&SYS->GPD_MFPL, SYS_GPD_MFPL_PD6MFP_Msk, SYS_GPD_MFPL_PD6MFP_GPIO }}, //21
  {NULL, NULL, {NULL, NULL, NULL}}, //22
  {PF, BIT0, {(uint32_t)&SYS->GPF_MFPL, SYS_GPF_MFPL_PF0MFP_Msk, SYS_GPF_MFPL_PF0MFP_GPIO }}, //23
  {PF, BIT1, {(uint32_t)&SYS->GPF_MFPL, SYS_GPF_MFPL_PF1MFP_Msk, SYS_GPF_MFPL_PF1MFP_GPIO }}, //24
  {PF, BIT2, {(uint32_t)&SYS->GPF_MFPL, SYS_GPF_MFPL_PF2MFP_Msk, SYS_GPF_MFPL_PF2MFP_GPIO }}, //25
  {PD, BIT10, {(uint32_t)&SYS->GPD_MFPH, SYS_GPD_MFPH_PD10MFP_Msk, SYS_GPD_MFPH_PD10MFP_GPIO}}, //26
  {PD, BIT11, {(uint32_t)&SYS->GPD_MFPH, SYS_GPD_MFPH_PD11MFP_Msk, SYS_GPD_MFPH_PD11MFP_GPIO}}, //27
  {PD, BIT12, {(uint32_t)&SYS->GPD_MFPH, SYS_GPD_MFPH_PD12MFP_Msk, SYS_GPD_MFPH_PD12MFP_GPIO}}, //28
  {PD, BIT13, {(uint32_t)&SYS->GPD_MFPH, SYS_GPD_MFPH_PD13MFP_Msk, SYS_GPD_MFPH_PD13MFP_GPIO}}, //29
  {PD, BIT14, {(uint32_t)&SYS->GPD_MFPH, SYS_GPD_MFPH_PD14MFP_Msk, SYS_GPD_MFPH_PD14MFP_GPIO}}, //30
  {PD, BIT15, {(uint32_t)&SYS->GPD_MFPH, SYS_GPD_MFPH_PD15MFP_Msk, SYS_GPD_MFPH_PD15MFP_GPIO}}, //31
  {PD, BIT7, {(uint32_t)&SYS->GPD_MFPL, SYS_GPD_MFPL_PD7MFP_Msk, SYS_GPD_MFPL_PD7MFP_GPIO }}, //32
  {PF, BIT3, {(uint32_t)&SYS->GPF_MFPL, SYS_GPF_MFPL_PF3MFP_Msk, SYS_GPF_MFPL_PF3MFP_GPIO }}, //33
  {PF, BIT4, {(uint32_t)&SYS->GPF_MFPL, SYS_GPF_MFPL_PF4MFP_Msk, SYS_GPF_MFPL_PF4MFP_GPIO }}, //34
  {NULL, NULL, {NULL, NULL, NULL}}, //35
  {NULL, NULL, {NULL, NULL, NULL}}, //36
  {NULL, NULL, {NULL, NULL, NULL}}, //37
  {PC, BIT9, {(uint32_t)&SYS->GPC_MFPH, SYS_GPC_MFPH_PC9MFP_Msk, SYS_GPC_MFPH_PC9MFP_GPIO }}, //38
  {PC, BIT10, {(uint32_t)&SYS->GPC_MFPH, SYS_GPC_MFPH_PC10MFP_Msk, SYS_GPC_MFPH_PC10MFP_GPIO}}, //39
  {PC, BIT11, {(uint32_t)&SYS->GPC_MFPH, SYS_GPC_MFPH_PC11MFP_Msk, SYS_GPC_MFPH_PC11MFP_GPIO}}, //40
  {PC, BIT12, {(uint32_t)&SYS->GPC_MFPH, SYS_GPC_MFPH_PC12MFP_Msk, SYS_GPC_MFPH_PC12MFP_GPIO}}, //41
  {PC, BIT13, {(uint32_t)&SYS->GPC_MFPH, SYS_GPC_MFPH_PC13MFP_Msk, SYS_GPC_MFPH_PC13MFP_GPIO}}, //42
  {PC, BIT14, {(uint32_t)&SYS->GPC_MFPH, SYS_GPC_MFPH_PC14MFP_Msk, SYS_GPC_MFPH_PC14MFP_GPIO}}, //43
  {PC, BIT0, {(uint32_t)&SYS->GPC_MFPL, SYS_GPC_MFPL_PC0MFP_Msk, SYS_GPC_MFPL_PC0MFP_GPIO }}, //44
  {PC, BIT1, {(uint32_t)&SYS->GPC_MFPL, SYS_GPC_MFPL_PC1MFP_Msk, SYS_GPC_MFPL_PC1MFP_GPIO }}, //45
  {PC, BIT2, {(uint32_t)&SYS->GPC_MFPL, SYS_GPC_MFPL_PC2MFP_Msk, SYS_GPC_MFPL_PC2MFP_GPIO }}, //46
  {PC, BIT3, {(uint32_t)&SYS->GPC_MFPL, SYS_GPC_MFPL_PC3MFP_Msk, SYS_GPC_MFPL_PC3MFP_GPIO }}, //47
  {PC, BIT4, {(uint32_t)&SYS->GPC_MFPL, SYS_GPC_MFPL_PC4MFP_Msk, SYS_GPC_MFPL_PC4MFP_GPIO }}, //48
  {PE, BIT0, {(uint32_t)&SYS->GPE_MFPL, SYS_GPE_MFPL_PE0MFP_Msk, SYS_GPE_MFPL_PE0MFP_GPIO }}, //49
  {PC, BIT5, {(uint32_t)&SYS->GPC_MFPL, SYS_GPC_MFPL_PC5MFP_Msk, SYS_GPC_MFPL_PC5MFP_GPIO }}, //50
  {PC, BIT6, {(uint32_t)&SYS->GPC_MFPL, SYS_GPC_MFPL_PC6MFP_Msk, SYS_GPC_MFPL_PC6MFP_GPIO }}, //51
  {PC, BIT7, {(uint32_t)&SYS->GPC_MFPL, SYS_GPC_MFPL_PC7MFP_Msk, SYS_GPC_MFPL_PC7MFP_GPIO }}, //52
  {PE, BIT4, {(uint32_t)&SYS->GPE_MFPL, SYS_GPE_MFPL_PE4MFP_Msk, SYS_GPE_MFPL_PE4MFP_GPIO }}, //53
  {PE, BIT5, {(uint32_t)&SYS->GPE_MFPL, SYS_GPE_MFPL_PE5MFP_Msk, SYS_GPE_MFPL_PE5MFP_GPIO }}, //54
#if USE_ICE == 0
  {PF, BIT5, {(uint32_t)&SYS->GPF_MFPL, SYS_GPF_MFPL_PF5MFP_Msk, SYS_GPF_MFPL_PF5MFP_GPIO }}, //55
  {PF, BIT6, {(uint32_t)&SYS->GPF_MFPL, SYS_GPF_MFPL_PF6MFP_Msk, SYS_GPF_MFPL_PF6MFP_GPIO }}, //56
#else
  {NULL, NULL, {NULL, NULL, NULL}}, //55
  {NULL, NULL, {NULL, NULL, NULL}}, //56
#endif
  {PA, BIT8, {(uint32_t)&SYS->GPA_MFPH, SYS_GPA_MFPH_PA8MFP_Msk, SYS_GPA_MFPH_PA8MFP_GPIO }}, //57
  {PA, BIT9, {(uint32_t)&SYS->GPA_MFPH, SYS_GPA_MFPH_PA9MFP_Msk, SYS_GPA_MFPH_PA9MFP_GPIO }}, //58
  {PA, BIT7, {(uint32_t)&SYS->GPA_MFPL, SYS_GPA_MFPL_PA7MFP_Msk, SYS_GPA_MFPL_PA7MFP_GPIO }}, //59
  {PA, BIT6, {(uint32_t)&SYS->GPA_MFPL, SYS_GPA_MFPL_PA6MFP_Msk, SYS_GPA_MFPL_PA6MFP_GPIO }}, //60
  {PA, BIT5, {(uint32_t)&SYS->GPA_MFPL, SYS_GPA_MFPL_PA5MFP_Msk, SYS_GPA_MFPL_PA5MFP_GPIO }}, //61
  {PA, BIT4, {(uint32_t)&SYS->GPA_MFPL, SYS_GPA_MFPL_PA4MFP_Msk, SYS_GPA_MFPL_PA4MFP_GPIO }}, //62
  {NULL, NULL, {NULL, NULL, NULL}}, //63
  {NULL, NULL, {NULL, NULL, NULL}}, //64
  {PE, BIT1, {(uint32_t)&SYS->GPE_MFPL, SYS_GPE_MFPL_PE1MFP_Msk, SYS_GPE_MFPL_PE1MFP_GPIO }}, //65
  {PE, BIT8, {(uint32_t)&SYS->GPE_MFPH, SYS_GPE_MFPH_PE8MFP_Msk, SYS_GPE_MFPH_PE8MFP_GPIO }}, //66
  {PE, BIT9, {(uint32_t)&SYS->GPE_MFPH, SYS_GPE_MFPH_PE9MFP_Msk, SYS_GPE_MFPH_PE9MFP_GPIO }}, //67
  {PE, BIT10, {(uint32_t)&SYS->GPE_MFPH, SYS_GPE_MFPH_PE10MFP_Msk, SYS_GPE_MFPH_PE10MFP_GPIO}}, //68
  {PE, BIT11, {(uint32_t)&SYS->GPE_MFPH, SYS_GPE_MFPH_PE11MFP_Msk, SYS_GPE_MFPH_PE11MFP_GPIO}}, //69
  {PE, BIT12, {(uint32_t)&SYS->GPE_MFPH, SYS_GPE_MFPH_PE12MFP_Msk, SYS_GPE_MFPH_PE12MFP_GPIO}}, //70
  {PE, BIT13, {(uint32_t)&SYS->GPE_MFPH, SYS_GPE_MFPH_PE13MFP_Msk, SYS_GPE_MFPH_PE13MFP_GPIO}}, //71
  {NULL, NULL, {NULL, NULL, NULL}}, //72
  {NULL, NULL, {NULL, NULL, NULL}}, //73
  {NULL, NULL, {NULL, NULL, NULL}}, //74
  {NULL, NULL, {NULL, NULL, NULL}}, //75
  {NULL, NULL, {NULL, NULL, NULL}}, //76
  {NULL, NULL, {NULL, NULL, NULL}}, //77
  {PE, BIT2, {(uint32_t)&SYS->GPE_MFPL, SYS_GPE_MFPL_PE2MFP_Msk, SYS_GPE_MFPL_PE2MFP_GPIO }}, //78
  {PA, BIT3, {(uint32_t)&SYS->GPA_MFPL, SYS_GPA_MFPL_PA3MFP_Msk, SYS_GPA_MFPL_PA3MFP_GPIO }}, //79
  {PA, BIT2, {(uint32_t)&SYS->GPA_MFPL, SYS_GPA_MFPL_PA2MFP_Msk, SYS_GPA_MFPL_PA2MFP_GPIO }}, //80
  {PA, BIT1, {(uint32_t)&SYS->GPA_MFPL, SYS_GPA_MFPL_PA1MFP_Msk, SYS_GPA_MFPL_PA1MFP_GPIO }}, //81
  {PA, BIT0, {(uint32_t)&SYS->GPA_MFPL, SYS_GPA_MFPL_PA0MFP_Msk, SYS_GPA_MFPL_PA0MFP_GPIO }}, //82
  {PA, BIT12, {(uint32_t)&SYS->GPA_MFPH, SYS_GPA_MFPH_PA12MFP_Msk, SYS_GPA_MFPH_PA12MFP_GPIO}}, //83
  {PA, BIT13, {(uint32_t)&SYS->GPA_MFPH, SYS_GPA_MFPH_PA13MFP_Msk, SYS_GPA_MFPH_PA13MFP_GPIO}}, //84
  {PA, BIT14, {(uint32_t)&SYS->GPA_MFPH, SYS_GPA_MFPH_PA14MFP_Msk, SYS_GPA_MFPH_PA14MFP_GPIO}}, //85
  {PA, BIT15, {(uint32_t)&SYS->GPA_MFPH, SYS_GPA_MFPH_PA15MFP_Msk, SYS_GPA_MFPH_PA15MFP_GPIO}}, //86
  {NULL, NULL, {NULL, NULL, NULL}}, //87
  {NULL, NULL, {NULL, NULL, NULL}}, //88
  {NULL, NULL, {NULL, NULL, NULL}}, //89
  {NULL, NULL, {NULL, NULL, NULL}}, //90
  {PB, BIT0, {(uint32_t)&SYS->GPB_MFPL, SYS_GPB_MFPL_PB0MFP_Msk, SYS_GPB_MFPL_PB0MFP_GPIO }}, //91
  {PB, BIT1, {(uint32_t)&SYS->GPB_MFPL, SYS_GPB_MFPL_PB1MFP_Msk, SYS_GPB_MFPL_PB1MFP_GPIO }}, //92
  {PB, BIT2, {(uint32_t)&SYS->GPB_MFPL, SYS_GPB_MFPL_PB2MFP_Msk, SYS_GPB_MFPL_PB2MFP_GPIO }}, //93
  {PB, BIT3, {(uint32_t)&SYS->GPB_MFPL, SYS_GPB_MFPL_PB3MFP_Msk, SYS_GPB_MFPL_PB3MFP_GPIO }}, //94
  {PB, BIT4, {(uint32_t)&SYS->GPB_MFPL, SYS_GPB_MFPL_PB4MFP_Msk, SYS_GPB_MFPL_PB4MFP_GPIO }}, //95
  {PB, BIT8, {(uint32_t)&SYS->GPB_MFPH, SYS_GPB_MFPH_PB8MFP_Msk, SYS_GPB_MFPH_PB8MFP_GPIO }}, //96
  {PB, BIT9, {(uint32_t)&SYS->GPB_MFPH, SYS_GPB_MFPH_PB9MFP_Msk, SYS_GPB_MFPH_PB9MFP_GPIO }}, //97
  {PB, BIT10, {(uint32_t)&SYS->GPB_MFPH, SYS_GPB_MFPH_PB10MFP_Msk, SYS_GPB_MFPH_PB10MFP_GPIO}}, //98
  {PB, BIT11, {(uint32_t)&SYS->GPB_MFPH, SYS_GPB_MFPH_PB11MFP_Msk, SYS_GPB_MFPH_PB11MFP_GPIO}}, //99
  {PB, BIT12, {(uint32_t)&SYS->GPB_MFPH, SYS_GPB_MFPH_PB12MFP_Msk, SYS_GPB_MFPH_PB12MFP_GPIO}}, //100
};
#endif

#ifndef PWM_DESC_USERDEF
const PWMPinDescription PWM_Desc[] = { //SYS_GPA_MFPL_PA5MFP_PWM0_CH0
  {PWM1, PWM1_MODULE, PWM0P0_IRQn, 0, 500, {PC_9 ,SYS_GPC_MFPH_PC9MFP_PWM1_CH0  }}, //0  PC9
  {PWM1, PWM1_MODULE, PWM0P0_IRQn, 1, 500, {PC_10,SYS_GPC_MFPH_PC10MFP_PWM1_CH1 }}, //1  PC10
  {PWM1, PWM1_MODULE, PWM0P1_IRQn, 2, 500, {PC_11,SYS_GPC_MFPH_PC11MFP_PWM1_CH2 }}, //2  PC11
  {PWM1, PWM1_MODULE, PWM0P1_IRQn, 3, 500, {PC_12,SYS_GPC_MFPH_PC12MFP_PWM1_CH3 }}, //3  PC12
  {PWM1, PWM1_MODULE, PWM0P2_IRQn, 4, 500, {PC_13,SYS_GPC_MFPH_PC13MFP_PWM1_CH4 }}, //4  PC13
  {PWM1, PWM1_MODULE, PWM0P2_IRQn, 5, 500, {PC_14,SYS_GPC_MFPH_PC14MFP_PWM1_CH5 }}, //5  PC14
  {PWM0, PWM0_MODULE, PWM0P1_IRQn, 3, 500, {PE_3 ,SYS_GPE_MFPL_PE3MFP_PWM0_CH3  }}, //6  PE3
  {PWM0, PWM0_MODULE, PWM0P2_IRQn, 5, 500, {PD_7 ,SYS_GPD_MFPL_PD7MFP_PWM0_CH5  }}, //7  PD7
};
#endif

#ifndef ADC_DESC_USERDEF
const ADCPinDescription ADC_Desc[] = { //SYS_GPE_MFPL_PE0MFP_ADC0_0
  {EADC, EADC_MODULE, 6,  {PB_9,  SYS_GPB_MFPH_PB9MFP_EADC_CH6  }}, //0
  {EADC, EADC_MODULE, 7,  {PB_10, SYS_GPB_MFPH_PB10MFP_EADC_CH7 }}, //1
  {EADC, EADC_MODULE, 8,  {PB_11, SYS_GPB_MFPH_PB11MFP_EADC_CH8 }}, //2
  {EADC, EADC_MODULE, 9,  {PB_12, SYS_GPB_MFPH_PB12MFP_EADC_CH9 }}, //3
  {EADC, EADC_MODULE, 10, {PB_13, SYS_GPB_MFPH_PB13MFP_EADC_CH10}}, //4
  {EADC, EADC_MODULE, 11, {PB_14, SYS_GPB_MFPH_PB14MFP_EADC_CH11}}, //5
  {EADC, EADC_MODULE, 12, {PB_15, SYS_GPB_MFPH_PB15MFP_EADC_CH12}}, //6
  {EADC, EADC_MODULE, 13, {PB_5,  SYS_GPB_MFPL_PB5MFP_EADC_CH13 }}, //7
  {EADC, EADC_MODULE, 14, {PB_6,  SYS_GPB_MFPL_PB6MFP_EADC_CH14 }}, //8
  {EADC, EADC_MODULE, 15, {PB_7,  SYS_GPB_MFPL_PB7MFP_EADC_CH15 }}, //9
  {EADC, EADC_MODULE, 1,  {PB_1,  SYS_GPB_MFPL_PB1MFP_EADC_CH1  }}, //10
};
#endif

#ifndef SPI_DESC_USERDEF
const SPIPinAlt_TypeDef SPI0PinAlt[] = {
    {{PB_7, SYS_GPB_MFPL_PB7MFP_SPI0_CLK}, {PB_5, SYS_GPB_MFPL_PB5MFP_SPI0_MOSI0},
	 {PB_6, SYS_GPB_MFPL_PB6MFP_SPI0_MISO0},{PE_12,SYS_GPE_MFPH_PE12MFP_SPI0_SS}},
    {{PE_13, SYS_GPE_MFPH_PE13MFP_SPI0_CLK}, {PE_11, SYS_GPE_MFPH_PE11MFP_SPI0_MOSI0},
	 {PE_10, SYS_GPE_MFPH_PE10MFP_SPI0_MISO0},{PE_12,SYS_GPE_MFPH_PE12MFP_SPI0_SS}},
    {{PB_2, SYS_GPB_MFPL_PB2MFP_SPI0_CLK}, {PB_0, SYS_GPB_MFPL_PB0MFP_SPI0_MOSI1},
	 {PB_1, SYS_GPB_MFPL_PB1MFP_SPI0_MISO1},{PB_4,SYS_GPB_MFPL_PB4MFP_SPI0_SS}},
};

const SPIPinAlt_TypeDef SPI1PinAlt[] = {
    {{PD_4, SYS_GPD_MFPL_PD4MFP_SPI1_CLK}, {PE_3,SYS_GPE_MFPL_PE3MFP_SPI1_MOSI},
	 {PD_5, SYS_GPD_MFPL_PD5MFP_SPI1_MISO},{PD_6,SYS_GPD_MFPL_PD6MFP_SPI1_SS}},
    {{PA_7, SYS_GPA_MFPL_PA7MFP_SPI1_CLK}, {PA_5,SYS_GPA_MFPL_PA5MFP_SPI1_MOSI},
	 {PA_6, SYS_GPA_MFPL_PA6MFP_SPI1_MISO},{PA_4,SYS_GPA_MFPL_PA4MFP_SPI1_SS}},
    {{PE_13, SYS_GPE_MFPH_PE13MFP_SPI1_CLK}, {PE_11, SYS_GPE_MFPH_PE11MFP_SPI1_MOSI},
	 {PE_10, SYS_GPE_MFPH_PE10MFP_SPI1_MISO},{PE_12,SYS_GPE_MFPH_PE12MFP_SPI1_SS}},
};
const SPIPinAlt_TypeDef SPI2PinAlt[] = {
    {{PD_15, SYS_GPD_MFPH_PD15MFP_SPI2_CLK }, {PD_13, SYS_GPD_MFPH_PD13MFP_SPI2_MOSI},
     {PD_14, SYS_GPD_MFPH_PD14MFP_SPI2_MISO}, {PD_12, SYS_GPD_MFPH_PD12MFP_SPI2_SS}},
    {{PC_12, SYS_GPC_MFPH_PC12MFP_SPI2_CLK }, {PC_10, SYS_GPC_MFPH_PC10MFP_SPI2_MOSI},
     {PD_11, SYS_GPC_MFPH_PC11MFP_SPI2_MISO}, {PC_13, SYS_GPC_MFPH_PC13MFP_SPI2_SS}},
    {{PE_0, SYS_GPE_MFPL_PE0MFP_SPI2_CLK }, {PC_3, SYS_GPC_MFPL_PC3MFP_SPI2_MOSI},
     {PC_4, SYS_GPC_MFPL_PC4MFP_SPI2_MISO}, {PC_2, SYS_GPC_MFPL_PC2MFP_SPI2_SS}},
};
const SPIPinDescription SPI_Desc[] = {
  {SPI0,SPI0_MODULE,SPI0_IRQn,CLK_CLKSEL2_SPI0SEL_PCLK0,SPI0PinAlt},
  {SPI1,SPI1_MODULE,SPI1_IRQn,CLK_CLKSEL2_SPI1SEL_PCLK1,SPI1PinAlt},
  {SPI2,SPI2_MODULE,SPI2_IRQn,CLK_CLKSEL2_SPI2SEL_PCLK0,SPI2PinAlt},
};
#endif

#ifndef UART_DESC_USERDEF
const UARTPinAlt_TypeDef UART0PinAlt[] = {
  {{PD_6, SYS_GPD_MFPL_PD6MFP_UART0_RXD }, {PD_1, SYS_GPD_MFPL_PD1MFP_UART0_TXD }},
  {{PD_0, SYS_GPD_MFPL_PD0MFP_UART0_RXD }, {PD_1, SYS_GPD_MFPL_PD1MFP_UART0_TXD }},
  {{PA_3, SYS_GPA_MFPL_PA3MFP_UART0_RXD }, {PA_0, SYS_GPA_MFPL_PA2MFP_UART0_TXD }},
};
const UARTPinAlt_TypeDef UART1PinAlt[] = {
  {{PB_2, SYS_GPB_MFPL_PB2MFP_UART1_RXD }, {PB_3, SYS_GPB_MFPL_PB3MFP_UART1_TXD }},
  {{PE_9, SYS_GPE_MFPH_PE9MFP_UART1_RXD }, {PE_8, SYS_GPE_MFPH_PE8MFP_UART1_TXD }},
  {{PE_13,SYS_GPE_MFPH_PE13MFP_UART1_RXD}, {PE_12,SYS_GPE_MFPH_PE12MFP_UART1_TXD}},
};
const UARTPinAlt_TypeDef UART2PinAlt[] = {
  {{PC_3, SYS_GPC_MFPL_PC3MFP_UART2_RXD }, {PC_2, SYS_GPC_MFPL_PC2MFP_UART2_TXD }},
  {{PB_0, SYS_GPB_MFPL_PB0MFP_UART2_RXD }, {PB_1, SYS_GPB_MFPL_PB1MFP_UART2_TXD }},
};
const UARTPinAlt_TypeDef UART3PinAlt[] = {
  {{PA_9, SYS_GPA_MFPH_PA9MFP_UART3_RXD }, {PA_8, SYS_GPA_MFPH_PA8MFP_UART3_TXD }},
  {{PD_13,SYS_GPD_MFPH_PD13MFP_UART3_RXD}, {PD_12,SYS_GPD_MFPH_PD12MFP_UART3_TXD}},
};
const UARTPinDescription UART_Desc[] = {
  {UART0, UART0_MODULE, UART0_IRQn,UART0PinAlt},
  {UART1, UART1_MODULE, UART1_IRQn,UART1PinAlt},
  {UART2, UART2_MODULE, UART2_IRQn,UART2PinAlt},
  {UART3, UART3_MODULE, UART3_IRQn,UART3PinAlt},
};
#endif

#ifndef I2C_DESC_USERDEF
const I2CPinAlt_TypeDef I2C0PinAlt[] = {
  {{PD_5, SYS_GPD_MFPL_PD5MFP_I2C0_SCL}, {PD_4, SYS_GPD_MFPL_PD4MFP_I2C0_SDA }},
  {{PE_12,SYS_GPE_MFPH_PE12MFP_I2C0_SCL},{PE_13,SYS_GPE_MFPH_PE13MFP_I2C0_SDA}},
  {{PA_3, SYS_GPA_MFPL_PA3MFP_I2C0_SCL}, {PA_2, SYS_GPA_MFPL_PA2MFP_I2C0_SDA }},
};
const I2CPinAlt_TypeDef I2C1PinAlt[] = {
  {{PC_4, SYS_GPC_MFPL_PC4MFP_I2C1_SCL}, {PE_0, SYS_GPE_MFPL_PE0MFP_I2C1_SDA }},
  {{PE_4, SYS_GPE_MFPL_PE4MFP_I2C1_SCL}, {PE_5, SYS_GPE_MFPL_PE5MFP_I2C1_SDA }},
  {{PE_8, SYS_GPE_MFPH_PE8MFP_I2C1_SCL}, {PE_9, SYS_GPE_MFPH_PE9MFP_I2C1_SDA }},
  {{PF_4, SYS_GPF_MFPL_PF3MFP_I2C1_SCL}, {PF_4, SYS_GPF_MFPL_PF4MFP_I2C1_SDA }},
};
const I2CPinDescription I2C_Desc[] = {
  {I2C0, I2C0_MODULE,I2C0_IRQn, I2C0PinAlt},
  {I2C1, I2C1_MODULE,I2C1_IRQn, I2C1PinAlt},
};
#endif

#ifndef CAN_DESC_USERDEF
const CANPinDescription CAN_Desc[] = {
  {CAN0, CAN0_MODULE, CAN0_IRQn, {{PA_13, SYS_GPA_MFPH_PA13MFP_CAN0_RXD}, {PA_12, SYS_GPA_MFPH_PA12MFP_CAN0_TXD}}},
};
#endif

