/*
  variant64.h NUC02LDE
  
  Copyright (c) 2018 huaweiwx@sina.com 2018.11.1

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
*/
#pragma GCC diagnostic ignored "-Wconversion-null"

#ifndef GPIO_DESC_USERDEF
#define MFP_NULL {NULL, NULL, {NULL, NULL, NULL, NULL, NULL, NULL, NULL}}
#define MFP_PN(a, b) {P##a,BIT##b,{(uint32_t)&SYS->GP##a##_MFP, \
                                    SYS_GP##a##_MFP_P##a##b##_Msk, \
						            SYS_ALT_MFP_P##a##b##_GPIO,\
						            SYS_ALT_MFP2_P##a##b##_GPIO,\
						            SYS_ALT_MFP3_P##a##b##_GPIO,\
						            SYS_ALT_MFP4_P##a##b##_GPIO,\
						            SYS_GP##a##_MFP_P##a##b##_GPIO}}
									
const GPIOPinDescription GPIO_Desc[] ={
  MFP_NULL,       //0
  MFP_PN(B, 12),  //1   CLKO/BPWM1_CH3                    
  MFP_PN(F, 5 ),  //2   I2C0_SCL/PWM1_CH5                 
  MFP_PN(F, 4 ),  //3   I2C0_SDA/PWM1_CH4                 
  MFP_PN(A, 11),  //4   I2C1_SCL/PWM1_CH3                 
  MFP_PN(A, 10),  //5   I2C1_SDA/PWM1_CH2                 
  MFP_PN(A, 9 ),  //6   I2C0_SCL/UART1_nCTS               
  MFP_PN(A, 8 ),  //7   I2C0_SDA/UART1_nRTS               
  MFP_PN(B, 4 ),  //8   UART1_RXD                         
  MFP_PN(B, 5 ),  //9   UART1_TXD                         
  MFP_NULL     ,  //10  LDO_CAP                           
  MFP_NULL     ,  //11  VDD                               
  MFP_NULL     ,  //12  VSS                               
  MFP_PN(B, 0 ),  //13  UART0_RXD                         
  MFP_PN(B, 1 ),  //14  UART0_TXD                         
  MFP_PN(B, 2 ),  //15  UART0_nRTS/TM2_EXT/PWM1_BRAKE1/TM2
  MFP_PN(B, 3 ),  //16  UART0_nCTS/TM3_EXT/PWM1_BRAKE0/TM3
  MFP_PN(D, 6 ),  //17  BPWM1_CH1                         
  MFP_PN(D, 7 ),  //18  BPWM1_CH0                         
  MFP_PN(D, 14),  //19  UART2_RXD/BPWM0_CH5               
  MFP_PN(D, 15),  //20  UART2_TXD/BPWM0_CH4               
  MFP_PN(C, 3 ),  //21  SPI0_MOSI0/BPWM0_CH3              
  MFP_PN(C, 2 ),  //22  SPI0_MISO0/BPWM0_CH2              
  MFP_PN(C, 1 ),  //23  SPI0_CLK/BPWM0_CH1                
  MFP_PN(C, 0 ),  //24  SPI0_SS0/BPWM0_CH0                
  MFP_PN(A, 15),  //25  PWM0_CH3                          
  MFP_PN(A, 14),  //26  PWM0_CH2                          
  MFP_PN(A, 13),  //27  PWM0_CH1/UART5_TXD                
  MFP_PN(A, 12),  //28  PWM0_CH0/UART5_RXD                
#if USE_ICE == 0
  MFP_PN(F, 7 ),  //29  ICE_DAT
  MFP_PN(F, 6 ),  //30  ICE_CLK
#else
  MFP_NULL,       //29  ICE_DAT
  MFP_NULL,       //30  ICE_CLK
#endif                                                                                                                                                                                              
  MFP_NULL,       //31  AVSS
  MFP_PN(A, 0 ),  //32  ADC_CH0/I2C1_SCL/UART5_TXD/PWM0_CH4
  MFP_PN(A, 1 ),  //33  ADC_CH1/I2C1_SDA/UART5_RXD/PWM0_CH5
  MFP_PN(A, 2 ),  //34  ADC_CH2/UART3_TXD/PWM1_CH0         
  MFP_PN(A, 3 ),  //35  ADC_CH3/UART3_RXD/PWM1_CH1         
  MFP_PN(A, 4 ),  //36  ADC_CH4                            
  MFP_PN(A, 5 ),  //37  ADC_CH5/UART3_RXD                  
  MFP_PN(A, 6 ),  //38  ADC_CH6/UART3_TXD                  
  MFP_PN(A, 7 ),  //39  ADC_CH7/VREF                       
  MFP_NULL     ,  //40  AVDD                               
  MFP_PN(C, 7 ),  //41  UART4_RXD/I2C0_SCL/PWM0_BRAKE1     
  MFP_PN(C, 6 ),  //42  UART4_TXD/I2C0_SDA/PWM0_BRAKE0     
  MFP_PN(B, 5 ),  //43  INT1/TM0/TM0_EXT/BPWM1_CH5         
  MFP_NULL     ,  //44  XT1_OUT/PF.0                       
  MFP_NULL     ,  //45  XT1_IN/PF.1                        
  MFP_NULL     ,  //46  nRESET                             
  MFP_PN(F, 8 ),  //47  CLKO/BPWM1_CH4                     
  MFP_PN(B, 8 ),  //48  TM0/STADC/CLKO/BPWM1_CH2           
};
#endif

#ifndef PWM_DESC_USERDEF
const PWMPinDescription PWM_Desc[]={
    {PWM0,PWM0_MODULE,PWM0_IRQn,0 ,500,{PA_12,SYS_GPA_MFP_PA12_PWM0_CH0,SYS_ALT_MFP_PA12_PWM0_CH0,SYS_ALT_MFP2_PA12_PWM0_CH0,SYS_ALT_MFP3_PA12_PWM0_CH0,SYS_ALT_MFP4_PA12_PWM0_CH0}},
    {PWM0,PWM0_MODULE,PWM0_IRQn,1 ,500,{PA_13,SYS_GPA_MFP_PA13_PWM0_CH1,SYS_ALT_MFP_PA13_PWM0_CH1,SYS_ALT_MFP2_PA13_PWM0_CH1,SYS_ALT_MFP3_PA13_PWM0_CH1,SYS_ALT_MFP4_PA13_PWM0_CH1}},
    {PWM0,PWM0_MODULE,PWM0_IRQn,2 ,500,{PA_14,SYS_GPA_MFP_PA14_PWM0_CH2,SYS_ALT_MFP_PA14_PWM0_CH2,SYS_ALT_MFP2_PA14_PWM0_CH2,SYS_ALT_MFP3_PA14_PWM0_CH2,SYS_ALT_MFP4_PA14_PWM0_CH2}},
    {PWM0,PWM0_MODULE,PWM0_IRQn,3 ,500,{PA_15,SYS_GPA_MFP_PA15_PWM0_CH3,SYS_ALT_MFP_PA15_PWM0_CH3,SYS_ALT_MFP2_PA15_PWM0_CH3,SYS_ALT_MFP3_PA15_PWM0_CH3,SYS_ALT_MFP4_PA15_PWM0_CH3}},
    {PWM0,PWM0_MODULE,PWM0_IRQn,6 ,500,{PA_0 ,SYS_GPA_MFP_PA0_PWM0_CH4 ,SYS_ALT_MFP_PA0_PWM0_CH4 ,SYS_ALT_MFP2_PA0_PWM0_CH4 ,SYS_ALT_MFP3_PA0_PWM0_CH4 ,SYS_ALT_MFP4_PA0_PWM0_CH4 }},
    {PWM0,PWM0_MODULE,PWM0_IRQn,7 ,500,{PA_1 ,SYS_GPA_MFP_PA1_PWM0_CH5 ,SYS_ALT_MFP_PA1_PWM0_CH5 ,SYS_ALT_MFP2_PA1_PWM0_CH5 ,SYS_ALT_MFP3_PA1_PWM0_CH5 ,SYS_ALT_MFP4_PA1_PWM0_CH5 }},
    {PWM1,PWM1_MODULE,PWM1_IRQn,8 ,500,{PA_2 ,SYS_GPA_MFP_PA2_PWM1_CH0 ,SYS_ALT_MFP_PA2_PWM1_CH0 ,SYS_ALT_MFP2_PA2_PWM1_CH0 ,SYS_ALT_MFP3_PA2_PWM1_CH0 ,SYS_ALT_MFP4_PA2_PWM1_CH0 }},
    {PWM1,PWM1_MODULE,PWM1_IRQn,9 ,500,{PA_3 ,SYS_GPA_MFP_PA3_PWM1_CH1 ,SYS_ALT_MFP_PA3_PWM1_CH1 ,SYS_ALT_MFP2_PA3_PWM1_CH1 ,SYS_ALT_MFP3_PA3_PWM1_CH1 ,SYS_ALT_MFP4_PA3_PWM1_CH1 }},
    {PWM1,PWM1_MODULE,PWM1_IRQn,10,500,{PA_10,SYS_GPA_MFP_PA10_PWM1_CH2,SYS_ALT_MFP_PA10_PWM1_CH2,SYS_ALT_MFP2_PA10_PWM1_CH2,SYS_ALT_MFP3_PA10_PWM1_CH2,SYS_ALT_MFP4_PA10_PWM1_CH2}},
    {PWM1,PWM1_MODULE,PWM1_IRQn,11,500,{PA_11,SYS_GPA_MFP_PA11_PWM1_CH3,SYS_ALT_MFP_PA11_PWM1_CH3,SYS_ALT_MFP2_PA11_PWM1_CH3,SYS_ALT_MFP3_PA11_PWM1_CH3,SYS_ALT_MFP4_PA11_PWM1_CH3}},
    {PWM1,PWM1_MODULE,PWM1_IRQn,12,500,{PF_4 ,SYS_GPF_MFP_PF4_PWM1_CH4 ,SYS_ALT_MFP_PF4_PWM1_CH4 ,SYS_ALT_MFP2_PF4_PWM1_CH4 ,SYS_ALT_MFP3_PF4_PWM1_CH4 ,SYS_ALT_MFP4_PF4_PWM1_CH4 }},
    {PWM1,PWM1_MODULE,PWM1_IRQn,13,500,{PF_5 ,SYS_GPF_MFP_PF5_PWM1_CH5 ,SYS_ALT_MFP_PF5_PWM1_CH5 ,SYS_ALT_MFP2_PF5_PWM1_CH5 ,SYS_ALT_MFP3_PF5_PWM1_CH5 ,SYS_ALT_MFP4_PF5_PWM1_CH5 }},
};
#endif

#ifndef ADC_DESC_USERDEF
const ADCPinDescription ADC_Desc[]={
	{ADC,ADC_MODULE,0,{PA_0,SYS_GPA_MFP_PA0_ADC0,SYS_ALT_MFP_PA0_ADC0,SYS_ALT_MFP2_PA0_ADC0,SYS_ALT_MFP3_PA0_ADC0,SYS_ALT_MFP4_PA0_ADC0}},
	{ADC,ADC_MODULE,1,{PA_1,SYS_GPA_MFP_PA1_ADC1,SYS_ALT_MFP_PA1_ADC1,SYS_ALT_MFP2_PA1_ADC1,SYS_ALT_MFP3_PA1_ADC1,SYS_ALT_MFP4_PA1_ADC1}},
	{ADC,ADC_MODULE,2,{PA_2,SYS_GPA_MFP_PA2_ADC2,SYS_ALT_MFP_PA2_ADC2,SYS_ALT_MFP2_PA2_ADC2,SYS_ALT_MFP3_PA2_ADC2,SYS_ALT_MFP4_PA2_ADC2}},
	{ADC,ADC_MODULE,3,{PA_3,SYS_GPA_MFP_PA3_ADC3,SYS_ALT_MFP_PA3_ADC3,SYS_ALT_MFP2_PA3_ADC3,SYS_ALT_MFP3_PA3_ADC3,SYS_ALT_MFP4_PA3_ADC3}},
	{ADC,ADC_MODULE,4,{PA_4,SYS_GPA_MFP_PA4_ADC4,SYS_ALT_MFP_PA4_ADC4,SYS_ALT_MFP2_PA4_ADC4,SYS_ALT_MFP3_PA4_ADC4,SYS_ALT_MFP4_PA4_ADC4}},
	{ADC,ADC_MODULE,5,{PA_5,SYS_GPA_MFP_PA5_ADC5,SYS_ALT_MFP_PA5_ADC5,SYS_ALT_MFP2_PA5_ADC5,SYS_ALT_MFP3_PA5_ADC5,SYS_ALT_MFP4_PA5_ADC5}},
	{ADC,ADC_MODULE,6,{PA_6,SYS_GPA_MFP_PA6_ADC6,SYS_ALT_MFP_PA6_ADC6,SYS_ALT_MFP2_PA6_ADC6,SYS_ALT_MFP3_PA6_ADC6,SYS_ALT_MFP4_PA6_ADC6}},
	{ADC,ADC_MODULE,7,{PA_7,SYS_GPA_MFP_PA7_ADC7,SYS_ALT_MFP_PA7_ADC7,SYS_ALT_MFP2_PA7_ADC7,SYS_ALT_MFP3_PA7_ADC7,SYS_ALT_MFP4_PA7_ADC7}},
};
#endif

#ifndef UART_DESC_USERDEF
const UARTPinAlt_TypeDef UART0PinAlt[] = {
	{{PB_0,SYS_GPB_MFP_PB0_UART0_RXD ,SYS_ALT_MFP_PB0_UART0_RXD,SYS_ALT_MFP2_PB0_UART0_RXD,SYS_ALT_MFP3_PB0_UART0_RXD,SYS_ALT_MFP4_PB0_UART0_RXD},
	 {PB_1,SYS_GPB_MFP_PB1_UART0_TXD ,SYS_ALT_MFP_PB1_UART0_TXD,SYS_ALT_MFP2_PB1_UART0_TXD,SYS_ALT_MFP3_PB1_UART0_TXD,SYS_ALT_MFP4_PB1_UART0_TXD}},
};
const UARTPinAlt_TypeDef UART1PinAlt[] = {
	{{PB_4,SYS_GPB_MFP_PB4_UART1_RXD ,SYS_ALT_MFP_PB4_UART1_RXD,SYS_ALT_MFP2_PB4_UART1_RXD ,SYS_ALT_MFP3_PB4_UART1_RXD ,SYS_ALT_MFP4_PB4_UART1_RXD},
	 {PB_5,SYS_GPB_MFP_PB5_UART1_TXD ,SYS_ALT_MFP_PB5_UART1_TXD,SYS_ALT_MFP2_PB5_UART1_TXD ,SYS_ALT_MFP3_PB5_UART1_TXD ,SYS_ALT_MFP4_PB5_UART1_TXD}},
};
const UARTPinAlt_TypeDef UART2PinAlt[] = {
	{{PD_14,SYS_GPD_MFP_PD14_UART2_RXD,SYS_ALT_MFP_PD14_UART2_RXD,SYS_ALT_MFP2_PD14_UART2_RXD,SYS_ALT_MFP3_PD14_UART2_RXD,SYS_ALT_MFP4_PD14_UART2_RXD},
	 {PD_15,SYS_GPD_MFP_PD15_UART2_TXD,SYS_ALT_MFP_PD15_UART2_TXD,SYS_ALT_MFP2_PD15_UART2_TXD,SYS_ALT_MFP3_PD15_UART2_TXD,SYS_ALT_MFP4_PD15_UART2_TXD}},
};
const UARTPinAlt_TypeDef UART3PinAlt[] = {
	{{PA_3,SYS_GPA_MFP_PA3_UART3_RXD,SYS_ALT_MFP_PA3_UART3_RXD,SYS_ALT_MFP2_PA3_UART3_RXD,SYS_ALT_MFP3_PA3_UART3_RXD,SYS_ALT_MFP4_PA3_UART3_RXD},
	 {PA_2,SYS_GPA_MFP_PA2_UART3_TXD,SYS_ALT_MFP_PA2_UART3_TXD,SYS_ALT_MFP2_PA2_UART3_TXD,SYS_ALT_MFP3_PA2_UART3_TXD,SYS_ALT_MFP4_PA2_UART3_TXD}},
	{{PA_5,SYS_GPA_MFP_PA5_UART3_RXD,SYS_ALT_MFP_PA5_UART3_RXD,SYS_ALT_MFP2_PA5_UART3_RXD,SYS_ALT_MFP3_PA5_UART3_RXD,SYS_ALT_MFP4_PA5_UART3_RXD},
	 {PA_6,SYS_GPA_MFP_PA6_UART3_TXD,SYS_ALT_MFP_PA6_UART3_TXD,SYS_ALT_MFP2_PA6_UART3_TXD,SYS_ALT_MFP3_PA6_UART3_TXD,SYS_ALT_MFP4_PA6_UART3_TXD}},
};
const UARTPinDescription UART_Desc[]={
    {UART0,UART0_MODULE,UART02_IRQn,UART0PinAlt},	
    {UART1,UART1_MODULE,UART1_IRQn, UART1PinAlt},	
    {UART2,UART2_MODULE,UART02_IRQn,UART2PinAlt},	
    {UART3,UART3_MODULE,UART3_IRQn, UART3PinAlt},	
};
#endif

#ifndef SPI_DESC_USERDEF
const SPIPinAlt_TypeDef SPI0PinAlt[] = { 
	{{PC_1,SYS_GPC_MFP_PC1_SPI0_CLK   ,SYS_ALT_MFP_PC1_SPI0_CLK  ,SYS_ALT_MFP2_PC1_SPI0_CLK  ,SYS_ALT_MFP3_PC1_SPI0_CLK  ,SYS_ALT_MFP4_PC1_SPI0_CLK  },
	 {PC_2,SYS_GPC_MFP_PC2_SPI0_MISO0 ,SYS_ALT_MFP_PC2_SPI0_MISO0,SYS_ALT_MFP2_PC2_SPI0_MISO0,SYS_ALT_MFP3_PC2_SPI0_MISO0,SYS_ALT_MFP4_PC2_SPI0_MISO0},
	 {PC_3,SYS_GPC_MFP_PC3_SPI0_MOSI0 ,SYS_ALT_MFP_PC3_SPI0_MOSI0,SYS_ALT_MFP2_PC3_SPI0_MOSI0,SYS_ALT_MFP3_PC3_SPI0_MOSI0,SYS_ALT_MFP4_PC3_SPI0_MOSI0},
	 {PC_0,SYS_GPC_MFP_PC0_SPI0_SS0   ,SYS_ALT_MFP_PC0_SPI0_SS0  ,SYS_ALT_MFP2_PC0_SPI0_SS0  ,SYS_ALT_MFP3_PC0_SPI0_SS0  ,SYS_ALT_MFP4_PC0_SPI0_SS0  }},
};
const SPIPinDescription SPI_Desc[]={
	{SPI0,SPI0_MODULE,SPI0_IRQn,CLK_CLKSEL1_SPI0_S_PLL,SPI0PinAlt},
};
#endif

#ifndef I2C_DESC_USERDEF
const I2CPinAlt_TypeDef I2C0PinAlt[] = {
	{{PA_8 ,SYS_GPA_MFP_PA8_I2C0_SDA, SYS_ALT_MFP_PA8_I2C0_SDA,SYS_ALT_MFP2_PA8_I2C0_SDA, SYS_ALT_MFP3_PA8_I2C0_SDA, SYS_ALT_MFP4_PA8_I2C0_SDA},  
	 {PA_9 ,SYS_GPA_MFP_PA9_I2C0_SCL, SYS_ALT_MFP_PA9_I2C0_SCL,SYS_ALT_MFP2_PA9_I2C0_SCL, SYS_ALT_MFP3_PA9_I2C0_SCL, SYS_ALT_MFP4_PA9_I2C0_SCL}},  
	{{PC_6 ,SYS_GPC_MFP_PC6_I2C0_SDA, SYS_ALT_MFP_PC6_I2C0_SDA,SYS_ALT_MFP2_PC6_I2C0_SDA, SYS_ALT_MFP3_PC6_I2C0_SDA, SYS_ALT_MFP4_PC6_I2C0_SDA}, 
	 {PC_7 ,SYS_GPC_MFP_PC7_I2C0_SCL, SYS_ALT_MFP_PC7_I2C0_SCL,SYS_ALT_MFP2_PC7_I2C0_SCL, SYS_ALT_MFP3_PC7_I2C0_SCL, SYS_ALT_MFP4_PC7_I2C0_SCL}}, 
	{{PF_4 ,SYS_GPF_MFP_PF4_I2C0_SDA, SYS_ALT_MFP_PF4_I2C0_SDA,SYS_ALT_MFP2_PF4_I2C0_SDA, SYS_ALT_MFP3_PF4_I2C0_SDA, SYS_ALT_MFP4_PF4_I2C0_SDA}, 
	 {PF_5 ,SYS_GPF_MFP_PF5_I2C0_SCL, SYS_ALT_MFP_PF5_I2C0_SCL,SYS_ALT_MFP2_PF5_I2C0_SCL, SYS_ALT_MFP3_PF5_I2C0_SCL, SYS_ALT_MFP4_PF5_I2C0_SCL}},
};
const I2CPinAlt_TypeDef I2C1PinAlt[] = {
	{{PA_1 ,SYS_GPA_MFP_PA1_I2C1_SDA, SYS_ALT_MFP_PA1_I2C1_SDA ,SYS_ALT_MFP2_PA1_I2C1_SDA, SYS_ALT_MFP3_PA1_I2C1_SDA, SYS_ALT_MFP4_PA1_I2C1_SDA},  
	 {PA_0, SYS_GPA_MFP_PA0_I2C1_SCL, SYS_ALT_MFP_PA0_I2C1_SCL ,SYS_ALT_MFP2_PA0_I2C1_SCL, SYS_ALT_MFP3_PA0_I2C1_SCL, SYS_ALT_MFP4_PA0_I2C1_SCL}},   
	{{PA_10,SYS_GPA_MFP_PA10_I2C1_SDA,SYS_ALT_MFP_PA10_I2C1_SDA,SYS_ALT_MFP2_PA10_I2C1_SDA,SYS_ALT_MFP3_PA10_I2C1_SDA,SYS_ALT_MFP4_PA10_I2C1_SDA}, 
	 {PA_11,SYS_GPA_MFP_PA11_I2C1_SCL,SYS_ALT_MFP_PA11_I2C1_SCL,SYS_ALT_MFP2_PA11_I2C1_SCL,SYS_ALT_MFP3_PA11_I2C1_SCL,SYS_ALT_MFP4_PA11_I2C1_SCL}}, 
};
const I2CPinDescription I2C_Desc[]={	
    {I2C0,I2C0_MODULE,I2C0_IRQn,I2C0PinAlt},
    {I2C1,I2C1_MODULE,I2C1_IRQn,I2C0PinAlt},
};
#endif
