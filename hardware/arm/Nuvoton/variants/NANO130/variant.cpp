/*
  Copyright (c) 2011 Arduino.  All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/
#include "Arduino.h"
#pragma GCC diagnostic ignored "-Wconversion-null"

#include "variant128.h"

#if    defined(ARDUINO_NuEdu_NANO130)
const GPIOPinDescription GPIO_Desc[] =
{
  {PC, BIT10,{(uint32_t)&SYS->PC_H_MFP, SYS_PC_H_MFP_PC10_MFP_Msk,SYS_PC_H_MFP_PC10_MFP_GPC10}}, //0
  {PC, BIT11,{(uint32_t)&SYS->PC_H_MFP, SYS_PC_H_MFP_PC11_MFP_Msk,SYS_PC_H_MFP_PC11_MFP_GPC11}}, //1
  {PA, BIT12,{(uint32_t)&SYS->PA_H_MFP, SYS_PA_H_MFP_PA12_MFP_Msk,SYS_PA_H_MFP_PA12_MFP_GPA12}}, //2
  {PA, BIT13,{(uint32_t)&SYS->PA_H_MFP, SYS_PA_H_MFP_PA13_MFP_Msk,SYS_PA_H_MFP_PA13_MFP_GPA13}}, //3
  {PA, BIT14,{(uint32_t)&SYS->PA_H_MFP, SYS_PA_H_MFP_PA14_MFP_Msk,SYS_PA_H_MFP_PA14_MFP_GPA14}}, //4
  {PA, BIT15,{(uint32_t)&SYS->PA_H_MFP, SYS_PA_H_MFP_PA15_MFP_Msk,SYS_PA_H_MFP_PA15_MFP_GPA15}}, //5
  {PC, BIT12,{(uint32_t)&SYS->PC_H_MFP, SYS_PC_H_MFP_PC12_MFP_Msk,SYS_PC_H_MFP_PC12_MFP_GPC12}}, //6
  {PC, BIT13,{(uint32_t)&SYS->PC_H_MFP, SYS_PC_H_MFP_PC13_MFP_Msk,SYS_PC_H_MFP_PC13_MFP_GPC13}}, //7
  {PC, BIT14,{(uint32_t)&SYS->PC_H_MFP, SYS_PC_H_MFP_PC14_MFP_Msk,SYS_PC_H_MFP_PC14_MFP_GPC14}}, //8
  {PC, BIT15,{(uint32_t)&SYS->PC_H_MFP, SYS_PC_H_MFP_PC15_MFP_Msk,SYS_PC_H_MFP_PC15_MFP_GPC15}}, //9

  {PD, BIT6, {(uint32_t)&SYS->PD_L_MFP, SYS_PD_L_MFP_PD6_MFP_Msk, SYS_PD_L_MFP_PD6_MFP_GPD6}},   //10
  {PD, BIT7, {(uint32_t)&SYS->PD_L_MFP, SYS_PD_L_MFP_PD7_MFP_Msk, SYS_PD_L_MFP_PD7_MFP_GPD7}},   //11
  {PD, BIT14,{(uint32_t)&SYS->PD_H_MFP, SYS_PD_H_MFP_PD14_MFP_Msk,SYS_PD_H_MFP_PD14_MFP_GPD14}}, //12
  {PD, BIT15,{(uint32_t)&SYS->PD_H_MFP, SYS_PD_H_MFP_PD15_MFP_Msk,SYS_PD_H_MFP_PD15_MFP_GPD15}}, //13
  {PA, BIT10,{(uint32_t)&SYS->PA_H_MFP, SYS_PA_H_MFP_PA10_MFP_Msk,SYS_PA_H_MFP_PA10_MFP_GPA10}}, //14
  {PA, BIT11,{(uint32_t)&SYS->PA_H_MFP, SYS_PA_H_MFP_PA11_MFP_Msk,SYS_PA_H_MFP_PA11_MFP_GPA11}}, //15
  {PA, BIT0, {(uint32_t)&SYS->PA_L_MFP, SYS_PA_L_MFP_PA0_MFP_Msk, SYS_PA_L_MFP_PA0_MFP_GPA0}},   //16
  {PA, BIT1, {(uint32_t)&SYS->PA_L_MFP, SYS_PA_L_MFP_PA1_MFP_Msk, SYS_PA_L_MFP_PA1_MFP_GPA1}},   //17
  {PA, BIT2, {(uint32_t)&SYS->PA_L_MFP, SYS_PA_L_MFP_PA2_MFP_Msk, SYS_PA_L_MFP_PA2_MFP_GPA2}},   //18
  {PA, BIT3, {(uint32_t)&SYS->PA_L_MFP, SYS_PA_L_MFP_PA3_MFP_Msk, SYS_PA_L_MFP_PA3_MFP_GPA3}},   //19

  {PA, BIT4, {(uint32_t)&SYS->PA_L_MFP, SYS_PA_L_MFP_PA4_MFP_Msk, SYS_PA_L_MFP_PA4_MFP_GPA4}},  //20
  {PA, BIT5, {(uint32_t)&SYS->PA_L_MFP, SYS_PA_L_MFP_PA5_MFP_Msk, SYS_PA_L_MFP_PA5_MFP_GPA5}},  //21
  {PA, BIT6, {(uint32_t)&SYS->PA_L_MFP, SYS_PA_L_MFP_PA6_MFP_Msk, SYS_PA_L_MFP_PA6_MFP_GPA6}},  //22
  {PA, BIT7, {(uint32_t)&SYS->PA_L_MFP, SYS_PA_L_MFP_PA7_MFP_Msk, SYS_PA_L_MFP_PA7_MFP_GPA7}},  //23
  {PD, BIT0, {(uint32_t)&SYS->PD_L_MFP, SYS_PD_L_MFP_PD0_MFP_Msk, SYS_PD_L_MFP_PD0_MFP_GPD0 }}, //24
  {PD, BIT1, {(uint32_t)&SYS->PD_L_MFP, SYS_PD_L_MFP_PD1_MFP_Msk, SYS_PD_L_MFP_PD1_MFP_GPD1 }}, //25
  {PD, BIT8, {(uint32_t)&SYS->PD_H_MFP, SYS_PD_H_MFP_PD8_MFP_Msk, SYS_PD_H_MFP_PD8_MFP_GPD8}},  //26
  {PD, BIT9, {(uint32_t)&SYS->PD_H_MFP, SYS_PD_H_MFP_PD9_MFP_Msk, SYS_PD_H_MFP_PD9_MFP_GPD9}},  //27
  {PC, BIT6, {(uint32_t)&SYS->PC_L_MFP, SYS_PC_L_MFP_PC6_MFP_Msk, SYS_PC_L_MFP_PC6_MFP_GPC6 }}, //28
  {PC, BIT7, {(uint32_t)&SYS->PC_L_MFP, SYS_PC_L_MFP_PC7_MFP_Msk, SYS_PC_L_MFP_PC7_MFP_GPC7 }}, //29

  {PD, BIT10,{(uint32_t)&SYS->PD_H_MFP, SYS_PD_H_MFP_PD10_MFP_Msk,SYS_PD_H_MFP_PD10_MFP_GPD10}}, //30
  {PD, BIT11,{(uint32_t)&SYS->PD_H_MFP, SYS_PD_H_MFP_PD11_MFP_Msk,SYS_PD_H_MFP_PD11_MFP_GPD11}}, //31
  {PA, BIT9, {(uint32_t)&SYS->PA_H_MFP, SYS_PA_H_MFP_PA9_MFP_Msk, SYS_PA_H_MFP_PA9_MFP_GPA9}},   //32
  {PA, BIT8, {(uint32_t)&SYS->PA_H_MFP, SYS_PA_H_MFP_PA8_MFP_Msk, SYS_PA_H_MFP_PA8_MFP_GPA8}},   //33
  {PB, BIT0, {(uint32_t)&SYS->PB_L_MFP, SYS_PB_L_MFP_PB0_MFP_Msk, SYS_PB_L_MFP_PB0_MFP_GPB0}},   //34
  {PB, BIT1, {(uint32_t)&SYS->PB_L_MFP, SYS_PB_L_MFP_PB1_MFP_Msk, SYS_PB_L_MFP_PB1_MFP_GPB1}},   //35
  {PE, BIT9, {(uint32_t)&SYS->PE_H_MFP, SYS_PE_H_MFP_PE9_MFP_Msk,  SYS_PE_H_MFP_PE9_MFP_GPE9}},  //36
  {PE, BIT10,{(uint32_t)&SYS->PE_H_MFP, SYS_PE_H_MFP_PE10_MFP_Msk, SYS_PE_H_MFP_PE10_MFP_GPE10}},//37
  {PE, BIT11,{(uint32_t)&SYS->PE_H_MFP, SYS_PE_H_MFP_PE11_MFP_Msk, SYS_PE_H_MFP_PE11_MFP_GPE11}},//38
  {PE, BIT12,{(uint32_t)&SYS->PE_H_MFP, SYS_PE_H_MFP_PE12_MFP_Msk, SYS_PE_H_MFP_PE12_MFP_GPE12}},//39

  {PE, BIT3, {(uint32_t)&SYS->PE_L_MFP, SYS_PE_L_MFP_PE3_MFP_Msk, SYS_PE_L_MFP_PE3_MFP_GPE3}},   //40
  {PE, BIT2, {(uint32_t)&SYS->PE_L_MFP, SYS_PE_L_MFP_PE2_MFP_Msk, SYS_PE_L_MFP_PE2_MFP_GPE2}},   //41
  {PE, BIT4, {(uint32_t)&SYS->PE_L_MFP, SYS_PE_L_MFP_PE4_MFP_Msk, SYS_PE_L_MFP_PE4_MFP_GPE4}},   //42
  {PE, BIT1, {(uint32_t)&SYS->PE_L_MFP, SYS_PE_L_MFP_PE1_MFP_Msk, SYS_PE_L_MFP_PE1_MFP_GPE1}},   //43
  {PD, BIT12,{(uint32_t)&SYS->PD_H_MFP, SYS_PD_H_MFP_PD12_MFP_Msk,SYS_PD_H_MFP_PD12_MFP_GPD12}}, //44
  {PE, BIT15,{(uint32_t)&SYS->PE_H_MFP, SYS_PE_H_MFP_PE15_MFP_Msk,SYS_PE_H_MFP_PE15_MFP_GPE15}}, //45
  {PB, BIT12,{(uint32_t)&SYS->PB_H_MFP, SYS_PB_H_MFP_PB12_MFP_Msk, SYS_PB_H_MFP_PB12_MFP_GPB12}},//46
  {PF, BIT4, {(uint32_t)&SYS->PF_L_MFP, SYS_PF_L_MFP_PF4_MFP_Msk, SYS_PF_L_MFP_PF4_MFP_GPF4 }},  //47
  {PE, BIT0, {(uint32_t)&SYS->PE_L_MFP, SYS_PE_L_MFP_PE0_MFP_Msk, SYS_PE_L_MFP_PE0_MFP_GPE0}},   //48
  {PF, BIT5, {(uint32_t)&SYS->PF_L_MFP, SYS_PF_L_MFP_PF5_MFP_Msk, SYS_PF_L_MFP_PF5_MFP_GPF5 }},  //49

  {PD, BIT2, {(uint32_t)&SYS->PD_L_MFP, SYS_PD_L_MFP_PD2_MFP_Msk, SYS_PD_L_MFP_PD2_MFP_GPD2 }},   //50
  {PC, BIT8, {(uint32_t)&SYS->PC_H_MFP, SYS_PC_H_MFP_PC8_MFP_Msk, SYS_PC_H_MFP_PC8_MFP_GPC8 }},   //51
  {PD, BIT3, {(uint32_t)&SYS->PD_L_MFP, SYS_PD_L_MFP_PD3_MFP_Msk, SYS_PD_L_MFP_PD3_MFP_GPD3 }},   //52
  {PC, BIT9, {(uint32_t)&SYS->PC_H_MFP, SYS_PC_H_MFP_PC9_MFP_Msk, SYS_PC_H_MFP_PC9_MFP_GPC9 }},   //53
  {PD, BIT4, {(uint32_t)&SYS->PD_L_MFP, SYS_PD_L_MFP_PD4_MFP_Msk, SYS_PD_L_MFP_PD4_MFP_GPD4 }},   //54
  {PC, BIT4, {(uint32_t)&SYS->PC_L_MFP, SYS_PC_L_MFP_PC4_MFP_Msk, SYS_PC_L_MFP_PC4_MFP_GPC4}},    //55
  {PD, BIT5, {(uint32_t)&SYS->PD_L_MFP, SYS_PD_L_MFP_PD5_MFP_Msk, SYS_PD_L_MFP_PD5_MFP_GPD5 }},   //56
  {PC, BIT5, {(uint32_t)&SYS->PC_L_MFP, SYS_PC_L_MFP_PC5_MFP_Msk, SYS_PC_L_MFP_PC5_MFP_GPC5}},    //57
  {PA, BIT15,{(uint32_t)&SYS->PA_H_MFP, SYS_PA_H_MFP_PA15_MFP_Msk,SYS_PA_H_MFP_PA15_MFP_GPA15}},  //58
  {PC, BIT2, {(uint32_t)&SYS->PC_L_MFP, SYS_PC_L_MFP_PC2_MFP_Msk, SYS_PC_L_MFP_PC2_MFP_GPC2}},    //59

  {PB, BIT9, {(uint32_t)&SYS->PB_H_MFP, SYS_PB_H_MFP_PB9_MFP_Msk, SYS_PB_H_MFP_PB9_MFP_GPB9}},   //60
  {PC, BIT3, {(uint32_t)&SYS->PC_L_MFP, SYS_PC_L_MFP_PC3_MFP_Msk, SYS_PC_L_MFP_PC3_MFP_GPC3}},   //61
  {PB, BIT10,{(uint32_t)&SYS->PB_H_MFP, SYS_PB_H_MFP_PB10_MFP_Msk,SYS_PB_H_MFP_PB10_MFP_GPB10}}, //62
  {PC, BIT0, {(uint32_t)&SYS->PC_L_MFP, SYS_PC_L_MFP_PC0_MFP_Msk, SYS_PC_L_MFP_PC0_MFP_GPC0}},   //63
  {PB, BIT11,{(uint32_t)&SYS->PB_H_MFP, SYS_PB_H_MFP_PB11_MFP_Msk,SYS_PB_H_MFP_PB11_MFP_GPB11}}, //64
  {PC, BIT1, {(uint32_t)&SYS->PC_L_MFP, SYS_PC_L_MFP_PC1_MFP_Msk, SYS_PC_L_MFP_PC1_MFP_GPC1}},   //65
  {PE, BIT5, {(uint32_t)&SYS->PE_L_MFP, SYS_PE_L_MFP_PE5_MFP_Msk, SYS_PE_L_MFP_PE5_MFP_GPE5}},   //66
  {PB, BIT15,{(uint32_t)&SYS->PB_H_MFP, SYS_PB_H_MFP_PB15_MFP_Msk,SYS_PB_H_MFP_PB15_MFP_GPB15}}, //67
  {PB, BIT4, {(uint32_t)&SYS->PB_L_MFP, SYS_PB_L_MFP_PB4_MFP_Msk, SYS_PB_L_MFP_PB4_MFP_GPB4}},   //68
  {PB, BIT3, {(uint32_t)&SYS->PB_L_MFP, SYS_PB_L_MFP_PB3_MFP_Msk, SYS_PB_L_MFP_PB3_MFP_GPB3}},   //69

  {PB, BIT5, {(uint32_t)&SYS->PB_L_MFP, SYS_PB_L_MFP_PB5_MFP_Msk, SYS_PB_L_MFP_PB5_MFP_GPB5}},   //70
  {PB, BIT2, {(uint32_t)&SYS->PB_L_MFP, SYS_PB_L_MFP_PB2_MFP_Msk, SYS_PB_L_MFP_PB2_MFP_GPB2}},   //71
  {PB, BIT6, {(uint32_t)&SYS->PB_L_MFP, SYS_PB_L_MFP_PB6_MFP_Msk, SYS_PB_L_MFP_PB6_MFP_GPB6}},   //72
  {PE, BIT7, {(uint32_t)&SYS->PE_L_MFP, SYS_PE_L_MFP_PE7_MFP_Msk,  SYS_PE_L_MFP_PE7_MFP_GPE7}},  //73
  {PB, BIT7, {(uint32_t)&SYS->PB_L_MFP, SYS_PB_L_MFP_PB7_MFP_Msk, SYS_PB_L_MFP_PB7_MFP_GPB7}},   //74
  {PE, BIT8, {(uint32_t)&SYS->PE_H_MFP, SYS_PE_H_MFP_PE8_MFP_Msk,  SYS_PE_H_MFP_PE8_MFP_GPE8}},  //75
  {PE, BIT6, {(uint32_t)&SYS->PE_L_MFP, SYS_PE_L_MFP_PE6_MFP_Msk, SYS_PE_L_MFP_PE6_MFP_GPE6}},   //76
  {PB, BIT14,{(uint32_t)&SYS->PB_H_MFP, SYS_PB_H_MFP_PB14_MFP_Msk, SYS_PB_H_MFP_PB14_MFP_GPB14}},//77
  {PD, BIT13,{(uint32_t)&SYS->PD_H_MFP, SYS_PD_H_MFP_PD13_MFP_Msk,SYS_PD_H_MFP_PD13_MFP_GPD13}}, //78
  {PE, BIT13,{(uint32_t)&SYS->PE_H_MFP, SYS_PE_H_MFP_PE13_MFP_Msk, SYS_PE_H_MFP_PE13_MFP_GPE13}},//79

  {PB, BIT13,{(uint32_t)&SYS->PB_H_MFP, SYS_PB_H_MFP_PB13_MFP_Msk, SYS_PB_H_MFP_PB13_MFP_GPB13}},//80
  {PF, BIT0, {(uint32_t)&SYS->PF_L_MFP, SYS_PF_L_MFP_PF0_MFP_Msk, SYS_PF_L_MFP_PF0_MFP_GPF0}},   //81
  {PF, BIT1, {(uint32_t)&SYS->PF_L_MFP, SYS_PF_L_MFP_PF1_MFP_Msk, SYS_PF_L_MFP_PF1_MFP_GPF1}},   //82
  {PB, BIT8, {(uint32_t)&SYS->PB_H_MFP, SYS_PB_H_MFP_PB8_MFP_Msk, SYS_PB_H_MFP_PB8_MFP_GPB8 }},  //83
  {PE, BIT14,{(uint32_t)&SYS->PE_H_MFP, SYS_PE_H_MFP_PE14_MFP_Msk,SYS_PE_H_MFP_PE14_MFP_GPE14}}, //84

};
#endif
