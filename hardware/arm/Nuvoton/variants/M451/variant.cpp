/*
  Copyright (c) 2011 Arduino.  All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/
#include "Arduino.h"

#ifdef USE_BoardToPin
const BoardToPin BoardToPinInfo[] = {
  { 21, UART_TYPE, 0}, // 0: PD6(UART_RX0)
  { 15, UART_TYPE, 0}, // 1: PD1(UART_TX0)
  { 38, PWM_TYPE, 0}, // 2: PC9(PWM0)
  { 39, PWM_TYPE, 1}, // 3: PC10(PWM1)
  { 40, PWM_TYPE, 2}, // 4: PC11(PWM2)
  { 41, PWM_TYPE, 3}, // 5: PC12(PWM3)
  { 42, PWM_TYPE, 4}, // 6: PC13(PWM4)
  { 43, PWM_TYPE, 5}, // 7: PC14(PWM5)
  { 20, PWM_TYPE, 6}, // 8: PE3(PWM6)
  { 32, PWM_TYPE, 7}, // 9: PD7(PWM7)
  { 27, GPIO_TYPE, 0}, //10: PD11
  { 25, GPIO_TYPE, 0}, //11: PF2
  { 13, GPIO_TYPE, 0}, //12: PD8
  { 12, GPIO_TYPE, 0}, //13: PC8
  { 49, I2C_TYPE, 1}, //14: PE0(I2C1_SDA)
  { 48, I2C_TYPE, 1}, //15: PC4(I2C1_SCL)
  { 97, ADC_TYPE, 0}, //16: PB9 (ADC0)
  { 98, ADC_TYPE, 1}, //17: PB10(ADC1)
  { 99, ADC_TYPE, 2}, //18: PB11(ADC2)
  {100, ADC_TYPE, 3}, //19: PB12(ADC3)
  {  1, ADC_TYPE, 4}, //20: PB13(ADC4)
  {  2, ADC_TYPE, 5}, //21: PB14(ADC5)
  {  3, ADC_TYPE, 6}, //22: PB15(ADC6)
  {  4, ADC_TYPE, 7}, //23: PB5 (ADC7)
  {  5, ADC_TYPE, 8}, //24: PB6 (ADC8)
  {  6, ADC_TYPE, 9}, //25: PB7 (ADC9)
  { 92, ADC_TYPE, 10}, //26: PB1 (ADC10)
  { 52, GPIO_TYPE, 0}, //27: PC7
  { 91, GPIO_TYPE, 0}, //28: PB0
  { -1,        0, 0}, //29: NC
  { 84, CAN_TYPE, 0}, //30: PA13(CAN_RX)
  { 83, CAN_TYPE, 0}, //31: PA12(CAN_TX)
  { 19, I2C_TYPE, 1}, //32: PD5(I2C0_SCL)
  { 18, I2C_TYPE, 1}, //33: PD4(I2C0_SDA)
  { 93, UART_TYPE, 1}, //34: PB2(UART_RX1)
  { 94, UART_TYPE, 1}, //35: PB3(UART_TX1)
  { 47, UART_TYPE, 2}, //36: PC3(UART_RX2)
  { 46, UART_TYPE, 2}, //37: PC2(UART_TX2)
  { 58, UART_TYPE, 3}, //38: PA9(UART_RX3)
  { 57, UART_TYPE, 3}, //39: PA8(UART_TX3)
  { 30, SPI_TYPE, 0}, //40: PD14(SPI1_MISO)
  { 31, SPI_TYPE, 0}, //41: PD15(SPI1_CLK)
  { 29, SPI_TYPE, 0}, //42: PD13(SPI1_MOSI)
  { 28, SPI_TYPE, 0}, //43: PD12(SPI1_SS0)
  { 78, GPIO_TYPE, 0}, //44: PE2
  //-----------------------------------------
  { 45, GPIO_TYPE, 0}, //45: PC1
  { -1,        0, 0}, //46: NC
  {  8, GPIO_TYPE, 0}, //47: PD0
  { -1,        0, 0}, //48: NC
  { 65, GPIO_TYPE, 0}, //49: PA4
  { -1,        0, 0}, //50: NC
  { 62, GPIO_TYPE, 0}, //51: PA7
  { -1,        0, 0}, //52: NC
  { 63, GPIO_TYPE, 0}, //53: PA6
  { -1,        0, 0}, //54: NC
  { 64, GPIO_TYPE, 0}, //55: PA5
  { -1,        0, 0}, //56: NC
  { 16, GPIO_TYPE, 0}, //57: PD2
  { -1,        0, 0}, //58: NC
  { 26, GPIO_TYPE, 0}, //59: PD10
  { 53, GPIO_TYPE, 0}, //60: PE4
  {  8,        0, 0}, //61: NC
  { 54, GPIO_TYPE, 0}, //62: PE5
  { 14, GPIO_TYPE, 0}, //63: PD9
  { 82, GPIO_TYPE, 0}, //64: PA0
  { 51, GPIO_TYPE, 0}, //65: PC6
  { 81, GPIO_TYPE, 0}, //66: PA1
  { 73, GPIO_TYPE, 0}, //67: PE12
  { 68, GPIO_TYPE, 0}, //68: PE1
  { 74, GPIO_TYPE, 0}, //69: PE13
  { 95, GPIO_TYPE, 0}, //70: PB4
  { 71, GPIO_TYPE, 0}, //71: PE10
  { 96, GPIO_TYPE, 0}, //72: PB8
  { 72, GPIO_TYPE, 0}, //73: PE11
  { 85, GPIO_TYPE, 0}, //74: PA14
  { 69, GPIO_TYPE, 0}, //75: PE8
  { 86, GPIO_TYPE, 0}, //76: PA15
  { 70, GPIO_TYPE, 0}, //77: PE9
  { 17, GPIO_TYPE, 0}, //78: PD3
  { 50, GPIO_TYPE, 0}, //79: PC5
  { 44, GPIO_TYPE, 0}, //80: PC0
};
#endif

#pragma GCC diagnostic ignored "-Wconversion-null"

const GPIOPinDescription GPIO_Desc[] =
{
  {NULL, NULL, {NULL, NULL, NULL}}, //0
  {PB, BIT13, {(uint32_t)&SYS->GPB_MFPH, SYS_GPB_MFPH_PB13MFP_Msk, SYS_GPB_MFPH_PB13MFP_GPIO}}, //1
  {PB, BIT14, {(uint32_t)&SYS->GPB_MFPH, SYS_GPB_MFPH_PB14MFP_Msk, SYS_GPB_MFPH_PB14MFP_GPIO}}, //2
  {PB, BIT15, {(uint32_t)&SYS->GPB_MFPH, SYS_GPB_MFPH_PB15MFP_Msk, SYS_GPB_MFPH_PB15MFP_GPIO}}, //3
  {PB, BIT5, {(uint32_t)&SYS->GPB_MFPL, SYS_GPB_MFPL_PB5MFP_Msk, SYS_GPB_MFPL_PB5MFP_GPIO }}, //4
  {PB, BIT6, {(uint32_t)&SYS->GPB_MFPL, SYS_GPB_MFPL_PB6MFP_Msk, SYS_GPB_MFPL_PB6MFP_GPIO }}, //5
  {PB, BIT7, {(uint32_t)&SYS->GPB_MFPL, SYS_GPB_MFPL_PB7MFP_Msk, SYS_GPB_MFPL_PB7MFP_GPIO }}, //6
  {NULL, NULL, {NULL, NULL, NULL}}, //7
  {PD, BIT0, {(uint32_t)&SYS->GPD_MFPL, SYS_GPD_MFPL_PD0MFP_Msk, SYS_GPD_MFPL_PD0MFP_GPIO }}, //8
  {NULL, NULL, {NULL, NULL, NULL}}, //9
  {NULL, NULL, {NULL, NULL, NULL}}, //10
  {NULL, NULL, {NULL, NULL, NULL}}, //11
  {PC, BIT8, {(uint32_t)&SYS->GPC_MFPH, SYS_GPC_MFPH_PC8MFP_Msk, SYS_GPC_MFPH_PC8MFP_GPIO }}, //12
  {PD, BIT8, {(uint32_t)&SYS->GPD_MFPH, SYS_GPD_MFPH_PD8MFP_Msk, SYS_GPD_MFPH_PD8MFP_GPIO }}, //13
  {PD, BIT9, {(uint32_t)&SYS->GPD_MFPH, SYS_GPD_MFPH_PD9MFP_Msk, SYS_GPD_MFPH_PD9MFP_GPIO }}, //14
  {PD, BIT1, {(uint32_t)&SYS->GPD_MFPL, SYS_GPD_MFPL_PD1MFP_Msk, SYS_GPD_MFPL_PD1MFP_GPIO }}, //15
  {PD, BIT2, {(uint32_t)&SYS->GPD_MFPL, SYS_GPD_MFPL_PD2MFP_Msk, SYS_GPD_MFPL_PD2MFP_GPIO }}, //16
  {PD, BIT3, {(uint32_t)&SYS->GPD_MFPL, SYS_GPD_MFPL_PD3MFP_Msk, SYS_GPD_MFPL_PD3MFP_GPIO }}, //17
  {PD, BIT4, {(uint32_t)&SYS->GPD_MFPL, SYS_GPD_MFPL_PD4MFP_Msk, SYS_GPD_MFPL_PD4MFP_GPIO }}, //18
  {PD, BIT5, {(uint32_t)&SYS->GPD_MFPL, SYS_GPD_MFPL_PD5MFP_Msk, SYS_GPD_MFPL_PD5MFP_GPIO }}, //19
  {PE, BIT3, {(uint32_t)&SYS->GPE_MFPL, SYS_GPE_MFPL_PE3MFP_Msk, SYS_GPE_MFPL_PE3MFP_GPIO }}, //20
  {PD, BIT6, {(uint32_t)&SYS->GPD_MFPL, SYS_GPD_MFPL_PD6MFP_Msk, SYS_GPD_MFPL_PD6MFP_GPIO }}, //21
  {NULL, NULL, {NULL, NULL, NULL}}, //22
  {PF, BIT0, {(uint32_t)&SYS->GPF_MFPL, SYS_GPF_MFPL_PF0MFP_Msk, SYS_GPF_MFPL_PF0MFP_GPIO }}, //23
  {PF, BIT1, {(uint32_t)&SYS->GPF_MFPL, SYS_GPF_MFPL_PF1MFP_Msk, SYS_GPF_MFPL_PF1MFP_GPIO }}, //24
  {PF, BIT2, {(uint32_t)&SYS->GPF_MFPL, SYS_GPF_MFPL_PF2MFP_Msk, SYS_GPF_MFPL_PF2MFP_GPIO }}, //25
  {PD, BIT10, {(uint32_t)&SYS->GPD_MFPH, SYS_GPD_MFPH_PD10MFP_Msk, SYS_GPD_MFPH_PD10MFP_GPIO}}, //26
  {PD, BIT11, {(uint32_t)&SYS->GPD_MFPH, SYS_GPD_MFPH_PD11MFP_Msk, SYS_GPD_MFPH_PD11MFP_GPIO}}, //27
  {PD, BIT12, {(uint32_t)&SYS->GPD_MFPH, SYS_GPD_MFPH_PD12MFP_Msk, SYS_GPD_MFPH_PD12MFP_GPIO}}, //28
  {PD, BIT13, {(uint32_t)&SYS->GPD_MFPH, SYS_GPD_MFPH_PD13MFP_Msk, SYS_GPD_MFPH_PD13MFP_GPIO}}, //29
  {PD, BIT14, {(uint32_t)&SYS->GPD_MFPH, SYS_GPD_MFPH_PD14MFP_Msk, SYS_GPD_MFPH_PD14MFP_GPIO}}, //30
  {PD, BIT15, {(uint32_t)&SYS->GPD_MFPH, SYS_GPD_MFPH_PD15MFP_Msk, SYS_GPD_MFPH_PD15MFP_GPIO}}, //31
  {PD, BIT7, {(uint32_t)&SYS->GPD_MFPL, SYS_GPD_MFPL_PD7MFP_Msk, SYS_GPD_MFPL_PD7MFP_GPIO }}, //32
  {PF, BIT3, {(uint32_t)&SYS->GPF_MFPL, SYS_GPF_MFPL_PF3MFP_Msk, SYS_GPF_MFPL_PF3MFP_GPIO }}, //33
  {PF, BIT4, {(uint32_t)&SYS->GPF_MFPL, SYS_GPF_MFPL_PF4MFP_Msk, SYS_GPF_MFPL_PF4MFP_GPIO }}, //34
  {NULL, NULL, {NULL, NULL, NULL}}, //35
  {NULL, NULL, {NULL, NULL, NULL}}, //36
  {NULL, NULL, {NULL, NULL, NULL}}, //37
  {PC, BIT9, {(uint32_t)&SYS->GPC_MFPH, SYS_GPC_MFPH_PC9MFP_Msk, SYS_GPC_MFPH_PC9MFP_GPIO }}, //38
  {PC, BIT10, {(uint32_t)&SYS->GPC_MFPH, SYS_GPC_MFPH_PC10MFP_Msk, SYS_GPC_MFPH_PC10MFP_GPIO}}, //39
  {PC, BIT11, {(uint32_t)&SYS->GPC_MFPH, SYS_GPC_MFPH_PC11MFP_Msk, SYS_GPC_MFPH_PC11MFP_GPIO}}, //40
  {PC, BIT12, {(uint32_t)&SYS->GPC_MFPH, SYS_GPC_MFPH_PC12MFP_Msk, SYS_GPC_MFPH_PC12MFP_GPIO}}, //41
  {PC, BIT13, {(uint32_t)&SYS->GPC_MFPH, SYS_GPC_MFPH_PC13MFP_Msk, SYS_GPC_MFPH_PC13MFP_GPIO}}, //42
  {PC, BIT14, {(uint32_t)&SYS->GPC_MFPH, SYS_GPC_MFPH_PC14MFP_Msk, SYS_GPC_MFPH_PC14MFP_GPIO}}, //43
  {PC, BIT0, {(uint32_t)&SYS->GPC_MFPL, SYS_GPC_MFPL_PC0MFP_Msk, SYS_GPC_MFPL_PC0MFP_GPIO }}, //44
  {PC, BIT1, {(uint32_t)&SYS->GPC_MFPL, SYS_GPC_MFPL_PC1MFP_Msk, SYS_GPC_MFPL_PC1MFP_GPIO }}, //45
  {PC, BIT2, {(uint32_t)&SYS->GPC_MFPL, SYS_GPC_MFPL_PC2MFP_Msk, SYS_GPC_MFPL_PC2MFP_GPIO }}, //46
  {PC, BIT3, {(uint32_t)&SYS->GPC_MFPL, SYS_GPC_MFPL_PC3MFP_Msk, SYS_GPC_MFPL_PC3MFP_GPIO }}, //47
  {PC, BIT4, {(uint32_t)&SYS->GPC_MFPL, SYS_GPC_MFPL_PC4MFP_Msk, SYS_GPC_MFPL_PC4MFP_GPIO }}, //48
  {PE, BIT0, {(uint32_t)&SYS->GPE_MFPL, SYS_GPE_MFPL_PE0MFP_Msk, SYS_GPE_MFPL_PE0MFP_GPIO }}, //49
  {PC, BIT5, {(uint32_t)&SYS->GPC_MFPL, SYS_GPC_MFPL_PC5MFP_Msk, SYS_GPC_MFPL_PC5MFP_GPIO }}, //50
  {PC, BIT6, {(uint32_t)&SYS->GPC_MFPL, SYS_GPC_MFPL_PC6MFP_Msk, SYS_GPC_MFPL_PC6MFP_GPIO }}, //51
  {PC, BIT7, {(uint32_t)&SYS->GPC_MFPL, SYS_GPC_MFPL_PC7MFP_Msk, SYS_GPC_MFPL_PC7MFP_GPIO }}, //52
  {PE, BIT4, {(uint32_t)&SYS->GPE_MFPL, SYS_GPE_MFPL_PE4MFP_Msk, SYS_GPE_MFPL_PE4MFP_GPIO }}, //53
  {PE, BIT5, {(uint32_t)&SYS->GPE_MFPL, SYS_GPE_MFPL_PE5MFP_Msk, SYS_GPE_MFPL_PE5MFP_GPIO }}, //54
  {PF, BIT5, {(uint32_t)&SYS->GPF_MFPL, SYS_GPF_MFPL_PF5MFP_Msk, SYS_GPF_MFPL_PF5MFP_GPIO }}, //55
  {PF, BIT6, {(uint32_t)&SYS->GPF_MFPL, SYS_GPF_MFPL_PF6MFP_Msk, SYS_GPF_MFPL_PF6MFP_GPIO }}, //56
  {PA, BIT8, {(uint32_t)&SYS->GPA_MFPH, SYS_GPA_MFPH_PA8MFP_Msk, SYS_GPA_MFPH_PA8MFP_GPIO }}, //57
  {PA, BIT9, {(uint32_t)&SYS->GPA_MFPH, SYS_GPA_MFPH_PA9MFP_Msk, SYS_GPA_MFPH_PA9MFP_GPIO }}, //58
  {PA, BIT10, {(uint32_t)&SYS->GPA_MFPH, SYS_GPA_MFPH_PA10MFP_Msk, SYS_GPA_MFPH_PA10MFP_GPIO}}, //59
  {PA, BIT11, {(uint32_t)&SYS->GPA_MFPH, SYS_GPA_MFPH_PA11MFP_Msk, SYS_GPA_MFPH_PA11MFP_GPIO}}, //60
  {PE, BIT6, {(uint32_t)&SYS->GPE_MFPL, SYS_GPE_MFPL_PE6MFP_Msk, SYS_GPE_MFPL_PE6MFP_GPIO }}, //61
  {PA, BIT7, {(uint32_t)&SYS->GPA_MFPL, SYS_GPA_MFPL_PA7MFP_Msk, SYS_GPA_MFPL_PA7MFP_GPIO }}, //62
  {PA, BIT6, {(uint32_t)&SYS->GPA_MFPL, SYS_GPA_MFPL_PA6MFP_Msk, SYS_GPA_MFPL_PA6MFP_GPIO }}, //63
  {PA, BIT5, {(uint32_t)&SYS->GPA_MFPL, SYS_GPA_MFPL_PA5MFP_Msk, SYS_GPA_MFPL_PA5MFP_GPIO }}, //64
  {PA, BIT4, {(uint32_t)&SYS->GPA_MFPL, SYS_GPA_MFPL_PA4MFP_Msk, SYS_GPA_MFPL_PA4MFP_GPIO }}, //65
  {NULL, NULL, {NULL, NULL, NULL}}, //66
  {NULL, NULL, {NULL, NULL, NULL}}, //67
  {PE, BIT1, {(uint32_t)&SYS->GPE_MFPL, SYS_GPE_MFPL_PE1MFP_Msk, SYS_GPE_MFPL_PE1MFP_GPIO }}, //68
  {PE, BIT8, {(uint32_t)&SYS->GPE_MFPH, SYS_GPE_MFPH_PE8MFP_Msk, SYS_GPE_MFPH_PE8MFP_GPIO }}, //69
  {PE, BIT9, {(uint32_t)&SYS->GPE_MFPH, SYS_GPE_MFPH_PE9MFP_Msk, SYS_GPE_MFPH_PE9MFP_GPIO }}, //70
  {PE, BIT10, {(uint32_t)&SYS->GPE_MFPH, SYS_GPE_MFPH_PE10MFP_Msk, SYS_GPE_MFPH_PE10MFP_GPIO}}, //71
  {PE, BIT11, {(uint32_t)&SYS->GPE_MFPH, SYS_GPE_MFPH_PE11MFP_Msk, SYS_GPE_MFPH_PE11MFP_GPIO}}, //72
  {PE, BIT12, {(uint32_t)&SYS->GPE_MFPH, SYS_GPE_MFPH_PE12MFP_Msk, SYS_GPE_MFPH_PE12MFP_GPIO}}, //73
  {PE, BIT13, {(uint32_t)&SYS->GPE_MFPH, SYS_GPE_MFPH_PE13MFP_Msk, SYS_GPE_MFPH_PE13MFP_GPIO}}, //74
  {NULL, NULL, {NULL, NULL, NULL}}, //75
  {PE, BIT7, {(uint32_t)&SYS->GPE_MFPL, SYS_GPE_MFPL_PE7MFP_Msk, SYS_GPE_MFPL_PE7MFP_GPIO }}, //76
  {PC, BIT15, {(uint32_t)&SYS->GPC_MFPH, SYS_GPC_MFPH_PC15MFP_Msk, SYS_GPC_MFPH_PC15MFP_GPIO}}, //77
  {PE, BIT2, {(uint32_t)&SYS->GPE_MFPL, SYS_GPE_MFPL_PE2MFP_Msk, SYS_GPE_MFPL_PE2MFP_GPIO }}, //78
  {PA, BIT3, {(uint32_t)&SYS->GPA_MFPL, SYS_GPA_MFPL_PA3MFP_Msk, SYS_GPA_MFPL_PA3MFP_GPIO }}, //79
  {PA, BIT2, {(uint32_t)&SYS->GPA_MFPL, SYS_GPA_MFPL_PA2MFP_Msk, SYS_GPA_MFPL_PA2MFP_GPIO }}, //80
  {PA, BIT1, {(uint32_t)&SYS->GPA_MFPL, SYS_GPA_MFPL_PA1MFP_Msk, SYS_GPA_MFPL_PA1MFP_GPIO }}, //81
  {PA, BIT0, {(uint32_t)&SYS->GPA_MFPL, SYS_GPA_MFPL_PA0MFP_Msk, SYS_GPA_MFPL_PA0MFP_GPIO }}, //82
  {PA, BIT12, {(uint32_t)&SYS->GPA_MFPH, SYS_GPA_MFPH_PA12MFP_Msk, SYS_GPA_MFPH_PA12MFP_GPIO}}, //83
  {PA, BIT13, {(uint32_t)&SYS->GPA_MFPH, SYS_GPA_MFPH_PA13MFP_Msk, SYS_GPA_MFPH_PA13MFP_GPIO}}, //84
  {PA, BIT14, {(uint32_t)&SYS->GPA_MFPH, SYS_GPA_MFPH_PA14MFP_Msk, SYS_GPA_MFPH_PA14MFP_GPIO}}, //85
  {PA, BIT15, {(uint32_t)&SYS->GPA_MFPH, SYS_GPA_MFPH_PA15MFP_Msk, SYS_GPA_MFPH_PA15MFP_GPIO}}, //86
  {NULL, NULL, {NULL, NULL, NULL}}, //87
  {NULL, NULL, {NULL, NULL, NULL}}, //88
  {NULL, NULL, {NULL, NULL, NULL}}, //89
  {NULL, NULL, {NULL, NULL, NULL}}, //90
  {PB, BIT0, {(uint32_t)&SYS->GPB_MFPL, SYS_GPB_MFPL_PB0MFP_Msk, SYS_GPB_MFPL_PB0MFP_GPIO }}, //91
  {PB, BIT1, {(uint32_t)&SYS->GPB_MFPL, SYS_GPB_MFPL_PB1MFP_Msk, SYS_GPB_MFPL_PB1MFP_GPIO }}, //92
  {PB, BIT2, {(uint32_t)&SYS->GPB_MFPL, SYS_GPB_MFPL_PB2MFP_Msk, SYS_GPB_MFPL_PB2MFP_GPIO }}, //93
  {PB, BIT3, {(uint32_t)&SYS->GPB_MFPL, SYS_GPB_MFPL_PB3MFP_Msk, SYS_GPB_MFPL_PB3MFP_GPIO }}, //94
  {PB, BIT4, {(uint32_t)&SYS->GPB_MFPL, SYS_GPB_MFPL_PB4MFP_Msk, SYS_GPB_MFPL_PB4MFP_GPIO }}, //95
  {PB, BIT8, {(uint32_t)&SYS->GPB_MFPH, SYS_GPB_MFPH_PB8MFP_Msk, SYS_GPB_MFPH_PB8MFP_GPIO }}, //96
  {PB, BIT9, {(uint32_t)&SYS->GPB_MFPH, SYS_GPB_MFPH_PB9MFP_Msk, SYS_GPB_MFPH_PB9MFP_GPIO }}, //97
  {PB, BIT10, {(uint32_t)&SYS->GPB_MFPH, SYS_GPB_MFPH_PB10MFP_Msk, SYS_GPB_MFPH_PB10MFP_GPIO}}, //98
  {PB, BIT11, {(uint32_t)&SYS->GPB_MFPH, SYS_GPB_MFPH_PB11MFP_Msk, SYS_GPB_MFPH_PB11MFP_GPIO}}, //99
  {PB, BIT12, {(uint32_t)&SYS->GPB_MFPH, SYS_GPB_MFPH_PB12MFP_Msk, SYS_GPB_MFPH_PB12MFP_GPIO}}, //100
};

const PWMPinDescription PWM_Desc[] = { //SYS_GPA_MFPL_PA5MFP_PWM0_CH0
  {PWM1, PWM1_MODULE, PWM0P0_IRQn, 0, 500, {PC_9 ,SYS_GPC_MFPH_PC9MFP_PWM1_CH0  }}, //0  PC9
  {PWM1, PWM1_MODULE, PWM0P0_IRQn, 1, 500, {PC_10,SYS_GPC_MFPH_PC10MFP_PWM1_CH1 }}, //1  PC10
  {PWM1, PWM1_MODULE, PWM0P1_IRQn, 2, 500, {PC_11,SYS_GPC_MFPH_PC11MFP_PWM1_CH2 }}, //2  PC11
  {PWM1, PWM1_MODULE, PWM0P1_IRQn, 3, 500, {PC_12,SYS_GPC_MFPH_PC12MFP_PWM1_CH3 }}, //3  PC12
  {PWM1, PWM1_MODULE, PWM0P2_IRQn, 4, 500, {PC_13,SYS_GPC_MFPH_PC13MFP_PWM1_CH4 }}, //4  PC13
  {PWM1, PWM1_MODULE, PWM0P2_IRQn, 5, 500, {PC_14,SYS_GPC_MFPH_PC14MFP_PWM1_CH5 }}, //5  PC14
  {PWM0, PWM0_MODULE, PWM0P1_IRQn, 3, 500, {PE_3 ,SYS_GPE_MFPL_PE3MFP_PWM0_CH3  }}, //6  PE3
  {PWM0, PWM0_MODULE, PWM0P2_IRQn, 5, 500, {PD_7 ,SYS_GPD_MFPL_PD7MFP_PWM0_CH5  }}, //7  PD7
};

const ADCPinDescription ADC_Desc[] = { //SYS_GPE_MFPL_PE0MFP_ADC0_0
  {EADC, EADC_MODULE, 6,  {PB_9,  SYS_GPB_MFPH_PB9MFP_EADC_CH6  }}, //0
  {EADC, EADC_MODULE, 7,  {PB_10, SYS_GPB_MFPH_PB10MFP_EADC_CH7 }}, //1
  {EADC, EADC_MODULE, 8,  {PB_11, SYS_GPB_MFPH_PB11MFP_EADC_CH8 }}, //2
  {EADC, EADC_MODULE, 9,  {PB_12, SYS_GPB_MFPH_PB12MFP_EADC_CH9 }}, //3
  {EADC, EADC_MODULE, 10, {PB_13, SYS_GPB_MFPH_PB13MFP_EADC_CH10}}, //4
  {EADC, EADC_MODULE, 11, {PB_14, SYS_GPB_MFPH_PB14MFP_EADC_CH11}}, //5
  {EADC, EADC_MODULE, 12, {PB_15, SYS_GPB_MFPH_PB15MFP_EADC_CH12}}, //6
  {EADC, EADC_MODULE, 13, {PB_5,  SYS_GPB_MFPL_PB5MFP_EADC_CH13 }}, //7
  {EADC, EADC_MODULE, 14, {PB_6,  SYS_GPB_MFPL_PB6MFP_EADC_CH14 }}, //8
  {EADC, EADC_MODULE, 15, {PB_7,  SYS_GPB_MFPL_PB7MFP_EADC_CH15 }}, //9
  {EADC, EADC_MODULE, 1,  {PB_1,  SYS_GPB_MFPL_PB1MFP_EADC_CH1  }}, //10
};

const SPIPinAlt_TypeDef SPI0PinAlt[] = {
    {{PB_7, SYS_GPB_MFPL_PB7MFP_SPI0_CLK}, {PB_5, SYS_GPB_MFPL_PB5MFP_SPI0_MOSI0},
	 {PB_6, SYS_GPB_MFPL_PB6MFP_SPI0_MISO0},{PE_12,SYS_GPE_MFPH_PE12MFP_SPI0_SS}},
    {{PE_13, SYS_GPE_MFPH_PE13MFP_SPI0_CLK}, {PE_11, SYS_GPE_MFPH_PE11MFP_SPI0_MOSI0},
	 {PE_10, SYS_GPE_MFPH_PE10MFP_SPI0_MISO0},{PE_12,SYS_GPE_MFPH_PE12MFP_SPI0_SS}},
    {{PB_2, SYS_GPB_MFPL_PB2MFP_SPI0_CLK}, {PB_0, SYS_GPB_MFPL_PB0MFP_SPI0_MOSI1},
	 {PB_1, SYS_GPB_MFPL_PB1MFP_SPI0_MISO1},{PB_4,SYS_GPB_MFPL_PB4MFP_SPI0_SS}},
};

const SPIPinAlt_TypeDef SPI1PinAlt[] = {
    {{PD_4, SYS_GPD_MFPL_PD4MFP_SPI1_CLK}, {PE_3,SYS_GPE_MFPL_PE3MFP_SPI1_MOSI},
	 {PD_5, SYS_GPD_MFPL_PD5MFP_SPI1_MISO},{PD_6,SYS_GPD_MFPL_PD6MFP_SPI1_SS}},
    {{PA_7, SYS_GPA_MFPL_PA7MFP_SPI1_CLK}, {PA_5,SYS_GPA_MFPL_PA5MFP_SPI1_MOSI},
	 {PA_6, SYS_GPA_MFPL_PA6MFP_SPI1_MISO},{PA_4,SYS_GPA_MFPL_PA4MFP_SPI1_SS}},
    {{PE_13, SYS_GPE_MFPH_PE13MFP_SPI1_CLK}, {PE_11, SYS_GPE_MFPH_PE11MFP_SPI1_MOSI},
	 {PE_10, SYS_GPE_MFPH_PE10MFP_SPI1_MISO},{PE_12,SYS_GPE_MFPH_PE12MFP_SPI1_SS}},
};
const SPIPinAlt_TypeDef SPI2PinAlt[] = {
    {{PD_15, SYS_GPD_MFPH_PD15MFP_SPI2_CLK }, {PD_13, SYS_GPD_MFPH_PD13MFP_SPI2_MOSI},
     {PD_14, SYS_GPD_MFPH_PD14MFP_SPI2_MISO}, {PD_12, SYS_GPD_MFPH_PD12MFP_SPI2_SS}},
    {{PC_12, SYS_GPC_MFPH_PC12MFP_SPI2_CLK }, {PC_10, SYS_GPC_MFPH_PC10MFP_SPI2_MOSI},
     {PD_11, SYS_GPC_MFPH_PC11MFP_SPI2_MISO}, {PC_13, SYS_GPC_MFPH_PC13MFP_SPI2_SS}},
    {{PE_0, SYS_GPE_MFPL_PE0MFP_SPI2_CLK }, {PC_3, SYS_GPC_MFPL_PC3MFP_SPI2_MOSI},
     {PC_4, SYS_GPC_MFPL_PC4MFP_SPI2_MISO}, {PC_2, SYS_GPC_MFPL_PC2MFP_SPI2_SS}},
};
const SPIPinDescription SPI_Desc[] = {
  {SPI0,SPI0_MODULE,SPI0_IRQn,CLK_CLKSEL2_SPI0SEL_PCLK0,SPI0PinAlt},
  {SPI1,SPI1_MODULE,SPI1_IRQn,CLK_CLKSEL2_SPI1SEL_PCLK1,SPI1PinAlt},
  {SPI2,SPI2_MODULE,SPI2_IRQn,CLK_CLKSEL2_SPI2SEL_PCLK0,SPI2PinAlt},
};

const UARTPinAlt_TypeDef UART0PinAlt[] = {
  {{PD_6, SYS_GPD_MFPL_PD6MFP_UART0_RXD }, {PD_1, SYS_GPD_MFPL_PD1MFP_UART0_TXD }},
  {{PD_0, SYS_GPD_MFPL_PD0MFP_UART0_RXD }, {PD_1, SYS_GPD_MFPL_PD1MFP_UART0_TXD }},
  {{PA_3, SYS_GPA_MFPL_PA3MFP_UART0_RXD }, {PA_0, SYS_GPA_MFPL_PA2MFP_UART0_TXD }},
};
const UARTPinAlt_TypeDef UART1PinAlt[] = {
  {{PB_2, SYS_GPB_MFPL_PB2MFP_UART1_RXD }, {PB_3, SYS_GPB_MFPL_PB3MFP_UART1_TXD }},
  {{PE_9, SYS_GPE_MFPH_PE9MFP_UART1_RXD }, {PE_8, SYS_GPE_MFPH_PE8MFP_UART1_TXD }},
  {{PE_13,SYS_GPE_MFPH_PE13MFP_UART1_RXD}, {PE_12,SYS_GPE_MFPH_PE12MFP_UART1_TXD}},
};
const UARTPinAlt_TypeDef UART2PinAlt[] = {
  {{PC_3, SYS_GPC_MFPL_PC3MFP_UART2_RXD }, {PC_2, SYS_GPC_MFPL_PC2MFP_UART2_TXD }},
  {{PB_0, SYS_GPB_MFPL_PB0MFP_UART2_RXD }, {PB_1, SYS_GPB_MFPL_PB1MFP_UART2_TXD }},
};
const UARTPinAlt_TypeDef UART3PinAlt[] = {
  {{PA_9, SYS_GPA_MFPH_PA9MFP_UART3_RXD }, {PA_8, SYS_GPA_MFPH_PA8MFP_UART3_TXD }},
  {{PD_13,SYS_GPD_MFPH_PD13MFP_UART3_RXD}, {PD_12,SYS_GPD_MFPH_PD12MFP_UART3_TXD}},
};
const UARTPinDescription UART_Desc[] = {
  {UART0, UART0_MODULE, UART0_IRQn,UART0PinAlt},
  {UART1, UART1_MODULE, UART1_IRQn,UART1PinAlt},
  {UART2, UART2_MODULE, UART2_IRQn,UART2PinAlt},
  {UART3, UART3_MODULE, UART3_IRQn,UART3PinAlt},
};

const I2CPinAlt_TypeDef I2C0PinAlt[] = {
  {{PD_5, SYS_GPD_MFPL_PD5MFP_I2C0_SCL}, {PD_4, SYS_GPD_MFPL_PD4MFP_I2C0_SDA }},
  {{PE_12,SYS_GPE_MFPH_PE12MFP_I2C0_SCL},{PE_13,SYS_GPE_MFPH_PE13MFP_I2C0_SDA}},
  {{PA_3, SYS_GPA_MFPL_PA3MFP_I2C0_SCL}, {PA_2, SYS_GPA_MFPL_PA2MFP_I2C0_SDA }},
};
const I2CPinAlt_TypeDef I2C1PinAlt[] = {
  {{PC_4, SYS_GPC_MFPL_PC4MFP_I2C1_SCL}, {PE_0, SYS_GPE_MFPL_PE0MFP_I2C1_SDA }},
  {{PE_4, SYS_GPE_MFPL_PE4MFP_I2C1_SCL}, {PE_5, SYS_GPE_MFPL_PE5MFP_I2C1_SDA }},
  {{PE_8, SYS_GPE_MFPH_PE8MFP_I2C1_SCL}, {PE_9, SYS_GPE_MFPH_PE9MFP_I2C1_SDA }},
  {{PF_4, SYS_GPF_MFPL_PF3MFP_I2C1_SCL}, {PF_4, SYS_GPF_MFPL_PF4MFP_I2C1_SDA }},
};
const I2CPinDescription I2C_Desc[] = {
  {I2C0, I2C0_MODULE, I2C0PinAlt},
  {I2C1, I2C1_MODULE, I2C1PinAlt},
};


const CANPinDescription CAN_Desc[] = {
  {CAN0, CAN0_MODULE, CAN0_IRQn, {{84, SYS_GPA_MFPH_PA13MFP_CAN0_RXD}, {83, SYS_GPA_MFPH_PA12MFP_CAN0_TXD}}},
};

